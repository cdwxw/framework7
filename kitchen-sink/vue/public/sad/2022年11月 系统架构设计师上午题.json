{
    "msg": "成功",
    "status": 0,
    "data": {
        "data": {
            "examine": {
                "examine_id": 16126,
                "answer_id": "3940045",
                "title": "2022年11月 系统架构设计师上午题",
                "len_time": 0,
                "total_score": "75",
                "get_score": "0",
                "total_question": 75,
                "proposal": "",
                "proposalList": [
                    {
                        "proposal": "",
                        "comment_time": "0",
                        "log_id": "8588680"
                    }
                ],
                "platform_id": "2",
                "submit_limit_num": "0",
                "version_id": "0",
                "version_year": "0",
                "mark_question_ids": []
            },
            "question": [
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "1669109840",
                    "question_id": "356185",
                    "difficulty_id": "3",
                    "question_title": "<p>云计算服务体系结构如下图所示，图中①、②、③分别与 SaaS PaaS Iaas相对应，图中①、②、③应为（1）</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669103626747232.png\" title=\"1669103626747232.png\" alt=\"image.png\"/></p>",
                    "option": [
                        " 应用层、基础设施层、平台层 ",
                        " 应用层、平台层、基础设施层 ",
                        " 平合层、应用层、基础设施层 ",
                        " 平台层、基础设施层、应用层 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>PaaS（Platform as a Service），平台即服务；</p><p>SaaS（Software as a Service），软件（应用）即服务；</p><p>IaaS（Infrastructure as a Service），基础设施即服务；</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356185",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669103651",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "计算机系统基础"
                    ],
                    "single_score": 0,
                    "index": 1,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "2",
                    "correlation_time": "1669109840",
                    "question_id": "356186",
                    "difficulty_id": "3",
                    "question_title": "<p>前趋图（PrecedcnceGraph）是一个有向无环图，记为:→={（Pi，Pj）}|Pi must complete before p2 may start}，假设系统中进程P={P1，P2，P3，P4，P5，P6，P7，P8}，且进程的前趋图如下图所示。那么，该前那图可记为（2）</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669103686948250.png\" title=\"1669103686948250.png\" alt=\"image.png\"/>",
                    "option": [
                        " &nbsp;&nbsp;→={（P1，P2），（P1，P3），（P1，P4），（P2，P5），（P3，P5），（P4，P7），（P5，P6），（P5，P7），（P7，P6），（P4，P5），（P6，P7），（P7，P8）} ",
                        " &nbsp;&nbsp;→={（P1，P2），（P1，P3），（P1，P4），（P2，P3），（P2，P5），（P3，P4），（P3，P6），（P4，P7），（P5，P6），（P5，P8），（P6，P7），（P7，P8）} ",
                        " &nbsp;→={（P1，P2），（P1，P3），（P1，P4），（P2，P3），（P2，P5），（P3，P4），（P3，P5），（P4，P6），（P5，P7），（P5，P8），（P6，P7），（P7，P8）} ",
                        " &nbsp;&nbsp;→={（P1，P2），（P1，P3），（P2，P3），（P2，P5），（P3，P4），（P3，P6），（P4，P7），（P5，P6），（P5，P8），（P6，P7），（P6，P8），（P7，P8）} "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>按数字先小后大原则找出箭头表示的12对逻辑关系：{（P1，P2），（P1，P3），（P1，P4），（P2，P3），（P2，P5），（P3，P4），（P3，P6），（P4，P7），（P5，P6），（P5，P8），（P6，P7），（P7，P8）}，经核对只有B为正确选项。</p><p>A、C选项均有（P3，P5），而图中无此逻辑，显然不对，排除；</p><p>D选项缺（P1，P1），排除。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356186",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669103717",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "操作系统\t"
                    ],
                    "single_score": 0,
                    "index": 2,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "3",
                    "correlation_time": "1669109840",
                    "question_id": "356187",
                    "difficulty_id": "3",
                    "question_title": "<p>若系统正在将（3）文件修改的结果写回磁盘时系统发生掉电、则对系统影响相对较大。</p>",
                    "option": [
                        " 系统目录 ",
                        " 空闲块 ",
                        " 用户程序 ",
                        " 用户数据 "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>一般情况下，系统不会去回写用户程序、用户数据，即便系统去写了这两部分也不会对系统本身造成较大的影响。只有系统对系统本身的目录或关键文件回写异常，才有可能导致较大的影响，严重的会导致系统崩溃。举个例子，linux系统下root账号回写/etc/resolv.conf异常时，可能会导致系统DNS服务异常。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356187",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669103759",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "操作系统\t"
                    ],
                    "single_score": 0,
                    "index": 3,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "4",
                    "correlation_time": "1669109840",
                    "question_id": "356188",
                    "difficulty_id": "3",
                    "question_title": "<p>在磁盘调度管理中，应先进行移臂调度，再进行旋转调度。假设磁盘移动臂位于20号柱面上，进程的请求序列如下表所示。如果采用最短移臂调度算法，那么系统的单应序列应为（4）</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669103775933296.png\" title=\"1669103775933296.png\" alt=\"image.png\"/>",
                    "option": [
                        " ②⑧③④⑤①⑦⑥⑨&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ",
                        " ②③⑧④⑥⑨①⑤⑦&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ",
                        " ④⑥⑨⑤⑦①②⑧③ ",
                        " ④⑥⑨⑤⑦①②③⑧ "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>移臂就是找柱面，旋转则找扇区，它们均按找最近原则调度。</p><p>首先，根据题干，距离当前移臂位置20号柱面最近的显然是21号柱面，对应的请求序列为④、⑥，排除A、B选项；其次，对于16号柱面，序列②⑧③访问扇区3、4、6的路基最优；因此只有C选项才符合。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356188",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669103792",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "操作系统\t"
                    ],
                    "single_score": 0,
                    "index": 4,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "5",
                    "correlation_time": "1669109840",
                    "question_id": "356189",
                    "difficulty_id": "3",
                    "question_title": "<p>采用三级模式结构的数据库系统中，如果对一个表创建聚索引，那么改变的是数据库的（5）</p>",
                    "option": [
                        " 外模式 ",
                        " 模式 ",
                        " 内模式 ",
                        " 用户模式 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>内模式定义的是存储记录的类型、存储域的表示、存储记录的物理顺序，指引元、索引和存储路径等数据的存储组织。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356189",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669103822",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "数据库基础"
                    ],
                    "single_score": 0,
                    "index": 5,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "6",
                    "correlation_time": "1669109840",
                    "question_id": "356190",
                    "difficulty_id": "3",
                    "question_title": "<p>假设系统中有正在运行的事务，若要转储全部数据库，则应采用（6）方式.</p>",
                    "option": [
                        " 静态全局转储 ",
                        " 动态增量转储 ",
                        " 静态增量转储 ",
                        " 动态全局转储 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>动态备份是指备份期间允许对数据库进行存取或修改，即备份和用户事务可以并发执行。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356190",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669103955",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "数据库基础"
                    ],
                    "single_score": 0,
                    "index": 6,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "7",
                    "correlation_time": "1669109840",
                    "question_id": "356191",
                    "difficulty_id": "3",
                    "question_title": "<p>给定关系模式R（U，F），其中U为属性集，F是U上的一组函数依赖，那么函数依赖的公理系统 （Armstrong 公理系统）中的分解规则是指（7）为F所蕴涵</p>",
                    "option": [
                        " 若X→Y，Y→Z，则X→Y&nbsp; ",
                        " 若Y⊆X⊆U.则X→Y&nbsp; ",
                        " 若X→Y，Z⊆Y，则X→Z ",
                        " 若X→Y，Y→Z，则X→YZ "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>Armstrong公理系统设关系模式R&lt;U，F&gt;，其中U为属性集，F是U上的一组函数依赖，那么有如下推理规则：</p><p>①&nbsp;A1自反律：若Y⊆X⊆U，则X→Y为F所蕴含；</p><p>②&nbsp;A2增广律：若X→Y为F所蕴含，且Z⊆U，则XZ→YZ为F所蕴含；</p><p>③&nbsp;A3传递律：若X→Y，Y→Z为F所蕴含，则X→Z为F所蕴含。</p><p>&nbsp;</p><p>根据上面三条推理规则，又可推出下面三条推理规则：</p><p>④&nbsp;合并规则：若X→Y，X→Z，则X→YZ为F所蕴含；</p><p>⑤&nbsp;伪传递规则：若X→Y，WY→Z，则XW→Z为F所蕴含；</p><p>⑥&nbsp;分解规则：若X→Y，Z⊆Y，则X→Z为F所蕴含。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356191",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104009",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "数据库基础"
                    ],
                    "single_score": 0,
                    "index": 7,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "8",
                    "correlation_time": "1669109840",
                    "question_id": "356192",
                    "difficulty_id": "3",
                    "question_title": "<p>给定关系R（A，B，C，D）和S（A，C，E，F），以下（8）与<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669104880394176.png\" title=\"1669104880394176.png\" alt=\"image.png\"/>等价，</p>",
                    "option": [
                        " <img style=\"max-width:100%;height:auto\" src=\"https://s2.51cto.com/images/20221122/1669104047345754.png\" title=\"1669104047345754.png\" alt=\"image.png\"/> ",
                        " <img style=\"max-width:100%;height:auto\" src=\"https://s2.51cto.com/images/20221122/1669104057806273.png\" title=\"1669104057806273.png\" alt=\"image.png\"/> ",
                        " <img style=\"max-width:100%;height:auto\" src=\"https://s2.51cto.com/images/20221122/1669104135537538.png\" title=\"1669104135537538.png\" alt=\"image.png\"/> ",
                        " <img style=\"max-width:100%;height:auto\" src=\"https://s2.51cto.com/images/20221122/1669104091432156.png\" title=\"1669104091432156.png\" alt=\"image.png\"/> "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>首先，R与S中未提及具体值&#39;7&#39;，因此排除C、D选项；</p><p>其次，A选项未考虑自然连接，排除A；</p><p>最后，只有B选项中R×S做选择时，第一列与第五列（R.A=S.A）、第三列与第六列（R.C=S.C），才考虑了自然连接，B选择符合。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356192",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104150",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "数据库基础",
                        "数据库基础"
                    ],
                    "single_score": 0,
                    "index": 8,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "9",
                    "correlation_time": "1669109840",
                    "question_id": "356193",
                    "difficulty_id": "3",
                    "question_title": "<p>以下关于鸿蒙操作系统的叙述中，不正确的是（9）.</p>",
                    "option": [
                        " 鸿蒙操作系统整体架构采用分层的层次化设计，从下向上依次为：内核层、系统服务层、框架层和应用层 ",
                        " 鸿蒙操作系统内核层采用宏内核设计，拥有更强的安全特性和低时延特点 ",
                        " 鸿蒙操作系统架构采用了分布式设计理念，实现了分布式软总线、分布式设系统的虚拟化、分布式数据管理和分布式任务调度等四种分布式能力 ",
                        " 架构的系统安全性主要体现在搭载 HarmonyOS 的分布式终端上，可以保证“正确的人，通过正确的设备，正确地使用数据” "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>HarmonyOS是基于微内核的全场景分布式OS。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356193",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104182",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "操作系统\t"
                    ],
                    "single_score": 0,
                    "index": 9,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "10",
                    "correlation_time": "1669109840",
                    "question_id": "356194",
                    "difficulty_id": "3",
                    "question_title": "<p>GPU 目前已广泛应用于各行各业，GPU中集成了同时运行在 GHz的频率上的成干上万个core.可以通处理的你数。最新的GPU峰值性能可高达（10）以上。</p>",
                    "option": [
                        " 100 TFlops&nbsp; ",
                        " 50 TFlops ",
                        " 10 TFlops&nbsp; ",
                        " 1 TFlops&nbsp; "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>最新的英伟达 GeForce RTX 4090 GPU达到100 TFLOPs 的算力。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356194",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104212",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "计算机系统基础"
                    ],
                    "single_score": 0,
                    "index": 10,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "11",
                    "correlation_time": "1669109840",
                    "question_id": "356195",
                    "difficulty_id": "3",
                    "question_title": "<p>AI芯片是当前人工智能技术发展的核心技术，其能力要支持训练和推理。通常，AI芯片的技术架构包括（11）等三种。</p>",
                    "option": [
                        " GPU、FPGA、ASIC ",
                        " CPU、PPGA、DSP ",
                        " GPU、CPU、ASIC&nbsp;&nbsp; ",
                        " GPU、FPGA、SOC "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>常用的AI芯片的技术架构包括 GPU， FPGA， ASIC和TPU</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356195",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104252",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "计算机系统基础"
                    ],
                    "single_score": 0,
                    "index": 11,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "12",
                    "correlation_time": "1669109840",
                    "question_id": "356196",
                    "difficulty_id": "3",
                    "question_title": "<p>通常，嵌入式中间件没有统一的架构风格，根据应用对象的不同可存在多种类型，比较常见的是消息中间件和分布式对象中间件。以下有关消息中间件的描述中，不正确的是（12）。</p>",
                    "option": [
                        " 消息中间件是消息传输过程中保存消息的一种容器 ",
                        " 消息中间件具有两个基本特点：采用异步处理模式、应用程序和应用程序  调用关系为松耦合关系 ",
                        " 消息中间件主要由一组对象来提供系统服务，对象间能够跨平台通信 ",
                        " 消息中间件的消息传递服务模型有点对点模型和发布-订阅模型之分 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>消息中间件，用于在两个应用程序之间，或分布式系统中发送消息，进行异步通信。消息队列（Message queue 即MQ）是在消息的传输过程中保存消息的容器。MQ负责两个系统之间传递消息，这两个系统可以是异构的，处于不同硬件、不同操作系统、用不同语言编写，只需要简单配置、以及简单的调用几个MQ的API，就可以互相通讯，不必考虑底层系统和网络的复杂性，MQ能够应付多种异常情况。消息中间件支持点对点模式、订阅发布模式、推拉模式。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356196",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104288",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 12,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "13",
                    "correlation_time": "1669109840",
                    "question_id": "356197",
                    "difficulty_id": "3",
                    "question_title": "<p>以下关于 HTTPS 和 HTTP协议的描述中，不正确的是（13）</p>",
                    "option": [
                        " HTTPS协议使用加密传输 ",
                        " HTTPS协议默认服务端口号是443 ",
                        " HTTP协议默认服务端口是80 ",
                        " 电子支付类网站应使用 HTTP协议 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>HTTP协议是一种使用明文数据传输的网络协议，缺省端口80。</p><p>HTTPS协议可以理解为HTTP协议的升级，就是在HTTP的基础上增加了数据加密，缺省端口443。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356197",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104318",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 计算机网络"
                    ],
                    "single_score": 0,
                    "index": 13,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "14",
                    "correlation_time": "1669109840",
                    "question_id": "356199",
                    "difficulty_id": "3",
                    "question_title": "<p>电子邮件客户端通过发起对（14）服务器的（15）端口的 TCP 连接来进行邮件发送。</p>",
                    "option": [
                        " POP3&nbsp; ",
                        " SMTP ",
                        " HTTP ",
                        " IMAP "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>POP3，邮件接收协议，缺省端口110</p><p>SMTP，邮件发送协议，缺省端口25</p><p>HTTP，超文本传输协议，缺省端口80</p><p>IMAP，交互式邮件存取协议，缺省端口143</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356198",
                    "sort_son": "1",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104365",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 计算机网络"
                    ],
                    "single_score": 0,
                    "index": 14,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "15",
                    "correlation_time": "1669109840",
                    "question_id": "356200",
                    "difficulty_id": "3",
                    "question_title": "<p>电子邮件客户端通过发起对（14）服务器的（15）端口的 TCP 连接来进行邮件发送。</p>",
                    "option": [
                        " 23 ",
                        " 25 ",
                        " 110 ",
                        " 143 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>POP3，邮件接收协议，缺省端口110</p><p>SMTP，邮件发送协议，缺省端口25</p><p>HTTP，超文本传输协议，缺省端口80</p><p>IMAP，交互式邮件存取协议，缺省端口143</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356198",
                    "sort_son": "2",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104365",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 计算机网络"
                    ],
                    "single_score": 0,
                    "index": 15,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "16",
                    "correlation_time": "1669109840",
                    "question_id": "356202",
                    "difficulty_id": "3",
                    "question_title": "<p>系统（16）是指在规定的时间内和规定条件下能有效地实现规定功能的能力。它不仅取决于规定的使用条件等因素，还与设计技术有关。常用的度量指标主要有故障率（或失效率）、平均失效等待时间、平均失效间隔时间和可靠度等。其中，（17）是系统在规定工作时间内无故障的概率。</p>",
                    "option": [
                        " 可靠性 ",
                        " 可用性 ",
                        " 可理解性 ",
                        " 可测试性 "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>可靠性（Reliability）是指产品在规定的条件下和规定的时间内完成规定功能的能力。常用的度量指标主要有故障率（或失效率）、平均失效等待时间、平均失效间隔时间和可靠度等。可靠度就是软件系统在规定的条件下、规定的时间内不发生失效的概率。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356201",
                    "sort_son": "1",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104412",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统安全与可靠性设计"
                    ],
                    "single_score": 0,
                    "index": 16,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "17",
                    "correlation_time": "1669109840",
                    "question_id": "356203",
                    "difficulty_id": "3",
                    "question_title": "<p>系统（16）是指在规定的时间内和规定条件下能有效地实现规定功能的能力。它不仅取决于规定的使用条件等因素，还与设计技术有关。常用的度量指标主要有故障率（或失效率）、平均失效等待时间、平均失效间隔时间和可靠度等。其中，（17）是系统在规定工作时间内无故障的概率。</p>",
                    "option": [
                        " 失效率 ",
                        " 平均失效等待时间 ",
                        " 平均失效间隔时间&nbsp;<br/> ",
                        " 可靠度 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>可靠性（Reliability）是指产品在规定的条件下和规定的时间内完成规定功能的能力。常用的度量指标主要有故障率（或失效率）、平均失效等待时间、平均失效间隔时间和可靠度等。可靠度就是软件系统在规定的条件下、规定的时间内不发生失效的概率。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356201",
                    "sort_son": "2",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104412",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统安全与可靠性设计"
                    ],
                    "single_score": 0,
                    "index": 17,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "18",
                    "correlation_time": "1669109840",
                    "question_id": "356204",
                    "difficulty_id": "3",
                    "question_title": "<p>数据资产的特征包括（18）</p><p>①可增值②可测试③可共享④可维护⑤可控制⑥可量化</p>",
                    "option": [
                        " ①②③④ ",
                        " ①②③⑤&nbsp;&nbsp; ",
                        " ①②④⑤&nbsp;&nbsp; ",
                        " ①③⑤⑥ "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>数据资产的特性包括：</p><p>可控制，可量化，可变现</p><p>虚拟性、共享性、时效性、安全性、交换性和规模性</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356204",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104453",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 18,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "19",
                    "correlation_time": "1669109840",
                    "question_id": "356205",
                    "difficulty_id": "3",
                    "question_title": "<p>数据管理能力成熟度评估模型（DCMM）是我国首个数据管理领域的国家标准，DCMM提出了符合我国企业的数据管理框架，该框架将组织数据管理能力划分为8个能力域，分别为:数据战略、数据治理、数据架构、数据标准，数据质量、数据安全、（19）。</p>",
                    "option": [
                        " 数据应用和数据生存周期 ",
                        " 数据应用和数据测试 ",
                        " 数据维护和数据生存周期 ",
                        " 数据维护和数据测试&nbsp;&nbsp; "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>DCMM评估内容包括数据战略、数据治理、数据架构、数据应用、数据安全、数据质量、数据标准和数据生存周期。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356205",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104485",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 19,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "20",
                    "correlation_time": "1669109840",
                    "question_id": "356207",
                    "difficulty_id": "3",
                    "question_title": "<p>完整的信息安全系统至少包含三类措施，即技术方面的安全措施、管理方面的安全措施和相应的（20）。其中，信息安全的技术措施主要有:信息加密、数字签名、身份鉴别、访问控制、网络控制技术、反病毒技术、（21）。</p>",
                    "option": [
                        " 用户需求 ",
                        " 政策法律 ",
                        " 市场需求 ",
                        " 领域需求 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>一个完整的信息安全系统至少包含三类措施：技术方面的安全措施，管理方面的安全措施和相应的政策法律。</p><p>信息安全的技术措施主要有：信息加密、数字签名、数据完整性保护、身份鉴别、访</p><p>问控制、数据备份和灾难恢复、网络控制技术、反病毒技术、安全审计、业务填充、路由控制机制、公证机制等。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356206",
                    "sort_son": "1",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104534",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统安全与可靠性设计"
                    ],
                    "single_score": 0,
                    "index": 20,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "21",
                    "correlation_time": "1669109840",
                    "question_id": "356208",
                    "difficulty_id": "3",
                    "question_title": "<p>完整的信息安全系统至少包含三类措施，即技术方面的安全措施、管理方面的安全措施和相应的（20）。其中，信息安全的技术措施主要有:信息加密、数字签名、身份鉴别、访问控制、网络控制技术、反病毒技术、（21）。</p>",
                    "option": [
                        " 数据备份和数据测试 ",
                        " 数据迁移和数据备份 ",
                        " 数据备份和灾难恢复 ",
                        " 数据迁移和数据测试 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>一个完整的信息安全系统至少包含三类措施：技术方面的安全措施，管理方面的安全措施和相应的政策法律。</p><p>信息安全的技术措施主要有：信息加密、数字签名、数据完整性保护、身份鉴别、访</p><p>问控制、数据备份和灾难恢复、网络控制技术、反病毒技术、安全审计、业务填充、路由控制机制、公证机制等。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356206",
                    "sort_son": "2",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104534",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统安全与可靠性设计"
                    ],
                    "single_score": 0,
                    "index": 21,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "22",
                    "correlation_time": "1669109840",
                    "question_id": "356209",
                    "difficulty_id": "3",
                    "question_title": "<p>与瀑布模型相比，（22）降低了实现需求变更的成本，更容易得到客户对于已完成开发工作的反馈意见，并且客户可以更早地使用软件并从中获得价值。</p>",
                    "option": [
                        " 快速原型模型 ",
                        " 敏捷开发 ",
                        " 增量式开发 ",
                        " 智能模型 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>增量式开发相比于瀑布模型的一些重要优点：</p><p>降低了适应用户需求变更的成本。重新分析和修改文档的工作量较之瀑布模型要少很多。</p><p>在开发过程中更容易得到用户对于已做的开发工作的反馈意见。用户可以评价软件的现实版本，并可以看到已经实现了多少。这比让用户从软件设计文档中判断工程进度要好很多。</p><p>使更快地交付和部署有用的软件到客户方变成了可能，虽然不是所有的功能都已经包含在内。相比于瀑布模型，用户可以更早地使用软件并创造商业价值。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356209",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104568",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 22,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "23",
                    "correlation_time": "1669109840",
                    "question_id": "356210",
                    "difficulty_id": "3",
                    "question_title": "<p>CMMI是软件企业进行多方面能力评价的、集成的成熟度模型，软件企业在实施过程中，为了达到本地化，应组织体系编写组，建立基于CMMI的软件质量管理体系文件，体系文件的层次结构一般分为四层，包括:①顶层方针②模板类文件③过程文件④规程文件按照自顶向下的塔型排列，以下顺序正确的是（23）。</p>",
                    "option": [
                        " ①④③② ",
                        " ①④②③&nbsp; ",
                        " ①②③④ ",
                        " ①③④② "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>软件过程构架结构由四个层次组成：方针、过程、规程和第四层的标准、规范、指南、模板、Checklist等组成。</p><p>1、方针为第一层文件，它是组织标准软件的高层次的抽象描述，它反映在公司的过程改进总体方针、政策中，由公司主管副总裁批准执行。</p><p>2、过程为第二层文件，主要规定在项目开发中执行该过程时应当执行的各项活动及适用标准。过程定义文件及其相关文件制定必须符合方针的要求。</p><p>3、规程为第三层文件，是对过程某些复杂活动的具体描述。</p><p>4、标准、规范、指南、模板、Checklist、范例库等是对上级过程或规程提供细致的步骤、活动及说明的支持性文档，第四层的文件从属于上级过程。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356210",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104968",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 23,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "24",
                    "correlation_time": "1669109840",
                    "question_id": "356211",
                    "difficulty_id": "3",
                    "question_title": "<p>信息建模方法是从数据的角度对现实世界建立模型，模型是现实系统的一个抽象，信息建模方法的基本工具是（24）。</p>",
                    "option": [
                        " 流程图 ",
                        " 实体联系图 ",
                        " 数据流图 ",
                        " 数据字典 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>业务流程图（TFD）是分析和描述现有系统的传统工具，是业务流程调查结果的图形化表示。</p><p>实体联系图（E-R图）它是描述概念世界，建立概念模型的实用工具。</p><p>数据流图（DFD）是表达系统内数据的流动并通过数据流描述系统功能的一种方法。</p><p>数据字典（DD）是在DFD的基础上，对DFD中出现的所有命名元素都加以定义，使得每个图形元素的名字都有一个确切的解释。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356211",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669104997",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统分析与设计"
                    ],
                    "single_score": 0,
                    "index": 24,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "25",
                    "correlation_time": "1669109840",
                    "question_id": "356212",
                    "difficulty_id": "3",
                    "question_title": "<p>（25）通常为一个迭代过程，其中的活动包括需求发现、需求分类和组织、需求协商、需求文档化。</p>",
                    "option": [
                        " 需求确认 ",
                        " 需求管理 ",
                        " 需求抽取 ",
                        " 需求规格说明 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>需求抽取和分析的过程</p><p>1. 发现需求 &nbsp;&nbsp;&nbsp;2.需求分类和组织 &nbsp;&nbsp;&nbsp;3.需求优先级划分和协商 &nbsp;&nbsp;&nbsp;4. 需求规格说明</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356212",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669105027",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统分析与设计"
                    ],
                    "single_score": 0,
                    "index": 25,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "26",
                    "correlation_time": "1669109840",
                    "question_id": "356213",
                    "difficulty_id": "3",
                    "question_title": "<p>使用模型驱动的软件开发方法，软件系统被表示为一组可以被自动转换为可执行代码的模型。其中，（26）在不涉及实现的情况下对软件系统进行建模。</p>",
                    "option": [
                        " 平台无关模型 ",
                        " 计算无关模型 ",
                        " 平台相关模型 ",
                        " 实现相关模型 "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>软件建模的三个层面：<br/>（1）计算无关模型（CIM）：Computational Independent Model<br/>（2）平台无关模型（PIM）：Platform Independent Model<br/>（3）平台相关模型（PSM）：Platform Dependent Model，又称平台特定模型<br/>从1到3，从抽象到具体</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356213",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669105269",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统分析与设计"
                    ],
                    "single_score": 0,
                    "index": 26,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "27",
                    "correlation_time": "1669109840",
                    "question_id": "356214",
                    "difficulty_id": "3",
                    "question_title": "<p>在分布式系统中，中间件通常提供两种不同类型的支持，即（27）</p>",
                    "option": [
                        " 数据支持和交互支持 ",
                        " 交互支持和提供公共服务 ",
                        " 数据支持和提供公共服务 ",
                        " 安全支持和提供公共服务 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>中间件是独立的系统级软件，连接操作系统层和应用程序层，将不同操作系统提供应用的接口标准化，协议统一化，屏蔽具体操作的细节，中间件一般提供如下功能：</p><p>1、通信支持。中间件为其所支持的应用软件提供平台化的运行环境，该环境屏蔽底层通信之间的接口差异，实现互操作，所以通信支持是中间件一个最基本的功能。</p><p>2、应用支持。中间件的目的就是服务上层应用，提供应用层不同服务之间的互操作机制。</p><p>3、公共服务。公共服务是对应用软件中共性功能或约束的提取。将这些共性的功能或者约束分类实现，并支持复用，作为公共服务，提供给应用程序使用。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356214",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669105309",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统分析与设计"
                    ],
                    "single_score": 0,
                    "index": 27,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "28",
                    "correlation_time": "1669109840",
                    "question_id": "356215",
                    "difficulty_id": "3",
                    "question_title": "<p>工作流表示的是业务过程模型，通常使用图形形式来描述，以下不可用来描述工作流的是（28）</p>",
                    "option": [
                        " 活动图 ",
                        " BPMN ",
                        " 用例图 ",
                        " Petri-Net "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>活动图可以用于描述系统的工作流程和并发行为，活动图其实可看作状态图的特殊形式，活动图中一个活动结束后将立即进入下一个活动。</p><p>BPMN（Business Process Modeling Notation）指业务流程建模与标注，包括这些图元如何组合成一个业务流程图（Business Process Diagram）。</p><p>Petri-Net是所有流程定义语言之母。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356215",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669105337",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统分析与设计"
                    ],
                    "single_score": 0,
                    "index": 28,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "29",
                    "correlation_time": "1669109840",
                    "question_id": "356216",
                    "difficulty_id": "3",
                    "question_title": "<p>（29）的常见功能包括版本控制、变更管理、配置状态管理、访问控制和安全控制等。</p>",
                    "option": [
                        " 软件测试工具 ",
                        " 版本控制工具 ",
                        " 软件维护工具 ",
                        " 软件配置管理工具 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>软件配置管理工具是指支持完成配置项标识、版本控制、变化控制、审计和状态统计等任务的工具，主要有下述功能：</p><p>(1)配置支持。配置是一组有共同目的的中间软件产品，其中每一个中间软件产品称为一个配置项。软件配置管理支持用户建立配置项之间的各种关系，并对这些关系加以维护，维护这些关系有助于完成某些特定任务(例如Build)和标识某一变化对整个系统开发的影响。&nbsp;[1]&nbsp;</p><p>(2)版本控制。版本控制是软件配置管理的基本要求，它可以保证在任何时刻恢复任何一个版本、版本控制还记录每个配置项的发展历史，这样就保证了版本之间的可追踪性，也为查找错误提供了帮助，版本控制也是支持并行开发的基础。</p><p>(3)变更控制。变更控制是指在整个软件生存周期中对软件变更的控制。变更控制系统记录每次变更的相关信息(变更的原因、变更的实施者以及变更的内容等)。这些信息有助于追踪出现的各种问题。</p><p>(4)构造支持。软件系统往往由许多配置项构成，建立整个系统是个复杂和费时的过程，软件配置管理工具可以记录和追踪每个配置项信息，帮助用户自动和快速地建立系统，和版本控制结合在一起，可以有效地支持同时开发系统的多个版本。</p><p>(5)过程支持。过程详细描述了各种人员在整个软件生存周期中如何使用整个系统，过程控制可以保证每一步都按照正确的顺序由合适的人员实施。过程控制本来是软件开发环境中一个独立的部分，软件配置管理也开始提供这部分功能。软件配置管理工具对过程的支持还很不够，而且支持方式差别也很大，许多管理只是提供一个预先定义好的生存周期模型，并保证开发的每一步都按照这个模型规定进行。</p><p>(6)团队支持。团队支持是指多个开发人员同时开发一个软件系统。大多数软件系统都需要多个开发人员参与，有效的团队支持对开发人员是很有用的。团队支持主要包括工作区管理、并行开发管理和远程开发管理(某些软件配置管理工具还包括对开发人员支持)。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356216",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669105730",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 29,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "30",
                    "correlation_time": "1669109840",
                    "question_id": "356217",
                    "difficulty_id": "3",
                    "question_title": "<p>与 UML 1.x 不同，为了更清楚地表达 UML 的结构， 从 UML 2 开始，整个 UML 规范被划分为基础结构和上层结构两个相对独立的部分，基础结构是 UML 的（30），它定义了构造 UML模型的各种基本元素：而上层结构则定义了面向建模用户的各种UML 模型的语法、语义和表示。</p>",
                    "option": [
                        " 元元素 ",
                        " 模型 ",
                        " 元模型 ",
                        " 元元模型 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>OMG在发布2.0修订信息需求之后，广泛听取了来自建模工具提供商、用户、学术团体、咨询机构以及其他标准化组织的26个响应者的建议，并于2000年年初发布了UML 2.0的4个组成部分的提案需求(RFP)，分别是：基础结构(Infrastructure)、上层结构(Superstructure)、对象约束语言(OCL)和图交换(Diagram Interchange)的需求。其中基础结构和上层结构构成了UML 2.0提案需求的主体部分。</p><p>UML 2.0基础结构的设计目标是：定义一个元语言的核心InfrastructureLibrary，通过对此核心的复用，除了可以定义一个自展的UML元模型，也可以定义其他元模型，包括MOF和CWM(Common Warehouse Model，公共仓库模型)。</p><p>UML 2.0上层结构的设计目标是：严格地复用基础结构InfrastructureLibrary包中的构造物；提高对基于构件开发和MDA(Model Driven Architecture，模型驱动体系结构)的支持；优化构架规约的能力；增强行为图的可伸缩性、精确性、集成性等。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356217",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669105774",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统分析与设计"
                    ],
                    "single_score": 0,
                    "index": 30,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "31",
                    "correlation_time": "1669109840",
                    "question_id": "356218",
                    "difficulty_id": "3",
                    "question_title": "<p>领域驱动设计提出围绕（31）进行软件设计和开发，该模型是由开发人员与领域专家协作构建出的一个反映深层次领域知识的模型。</p>",
                    "option": [
                        " 行为模型 ",
                        " 领域模型 ",
                        " 专家模型 ",
                        " 知识库模型 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>2004年Eric Evans 发表Domain-Driven Design –Tackling Complexity in the Heart of Software （领域驱动设计），简称Evans DDD。领域驱动设计分为两个阶段：</p><p>① 以一种领域专家、设计人员、开发人员都能理解的通用语言作为相互交流的工具，在交流的过程中发现领域概念，然后将这些概念设计成一个领域模型；</p><p>② 由领域模型驱动软件设计，用代码来实现该领域模型；</p><p>由此可见，领域驱动设计的核心是建立正确的领域模型。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356218",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669105819",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统分析与设计"
                    ],
                    "single_score": 0,
                    "index": 31,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "32",
                    "correlation_time": "1669109840",
                    "question_id": "356219",
                    "difficulty_id": "3",
                    "question_title": "<p>以下关于微服务架构与面向服务架构的描述中，正确的是（32）。</p>",
                    "option": [
                        " 两者均采用去中心化管理 ",
                        " 两者均采用集中式管理 ",
                        " 微服务架构采用去中心化管理，面向服务架构采用集中式管理 ",
                        " 微服务架构采用集中式管理，面向服务架构采用去中心化管理 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>SOA还是中心化集成老架构，ESB是SOA架构的中心；</p><p>而微服务架构倡导去中心化的服务管理和治理,尽量不设置中心化的管理服务。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356219",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669105855",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 32,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "33",
                    "correlation_time": "1669109840",
                    "question_id": "356221",
                    "difficulty_id": "3",
                    "question_title": "<p>在UML2.0 （Unified Modeling Language）中，顺序图用来描述对象之间的消息交互，其中循环、选择等复杂交互使用（33）表示，对象之间的消息类型包括（34）。</p>",
                    "option": [
                        " 嵌套 ",
                        " 泳道 ",
                        " 组合 ",
                        " 序列片段 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>UML2.0添加了交互框(Interaction Frame)，交互框指途中的一块区域(Region)或片段(Fragment)，包含一个操作符(或称为标签)，并包含一个警戒。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356220",
                    "sort_son": "1",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669105942",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统分析与设计"
                    ],
                    "single_score": 0,
                    "index": 33,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "34",
                    "correlation_time": "1669109840",
                    "question_id": "356222",
                    "difficulty_id": "3",
                    "question_title": "<p>在UML2.0 （Unified Modeling Language）中，顺序图用来描述对象之间的消息交互，其中循环、选择等复杂交互使用（33）表示，对象之间的消息类型包括（34）。</p>",
                    "option": [
                        " 同步消息、异步消息、返回消息、动态消息、静态消息 ",
                        " 同步消息、异步消息、动态消息、参与者创建消息、参与者销毁消息 ",
                        " 同步消息、异步消息、静态消息、参与者创建消息、参与者销毁消息 ",
                        " 同步消息、异步消息、返回消息、参与者创建消息、参与者销毁消息 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>UML2.0的消息类型有：简单消息、同步消息、异步消息、对象创建消息、对象销毁消息、无触发对象和无接收对象的消息。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356220",
                    "sort_son": "2",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669105942",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统分析与设计"
                    ],
                    "single_score": 0,
                    "index": 34,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "35",
                    "correlation_time": "1669109840",
                    "question_id": "356223",
                    "difficulty_id": "3",
                    "question_title": "<p>以下有关构件特征的的描述，说法不正确的是（35）</p>",
                    "option": [
                        " 构件是独立的部署单元 ",
                        " 构件可作为第三方的组装单元 ",
                        " 构件没有外部的可见状态 ",
                        " 构件作为部署单元是可拆分的 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>构件作为可部署单元，具有原子性，是不可拆分的。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356223",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669106011",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 35,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "36",
                    "correlation_time": "1669109840",
                    "question_id": "356224",
                    "difficulty_id": "3",
                    "question_title": "<p>在构件的定义中，（36）是一个已命名的一组操作的集合。</p>",
                    "option": [
                        " 接口 ",
                        " 对象 ",
                        " 函数 ",
                        " 模块 "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>构件的接口是一种服务提供者对消费者的承诺，即契约（contract），用契约确保一组构件之间的行为组合。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356224",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669106050",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 36,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "37",
                    "correlation_time": "1669109840",
                    "question_id": "356225",
                    "difficulty_id": "3",
                    "question_title": "<p>在服务端构件模型的典型解决方案中，（37）较为适用于应用服务器。</p>",
                    "option": [
                        " EJB和COM+模型 ",
                        " EJB和servlet模型 ",
                        " COM+和ASP模型 ",
                        " COM+和servlet模型 "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>EJB（Enterprise Java Beans） 是运行在独立服务器上的组件。</p><p>COM+ 是 Microsoft 组件对象模型 (COM) 和 Microsoft Transaction Server (MTS) 的演变。COM+ 可用于开发适用于Windows的企业范围、任务关键型分布式应用程序。</p><p>Servlet（Server Applet）是Java Servlet的简称，称为小服务程序或服务连接器。</p><p>ASP即Active Server Pages，是Microsoft公司开发的服务器端脚本环境，可用来创建动态交互式网页并建立强大的web应用程序。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356225",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669106168",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 37,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "38",
                    "correlation_time": "1669109840",
                    "question_id": "356226",
                    "difficulty_id": "3",
                    "question_title": "<p>以下有关构件演化的描述中，说法不正确的是（38）</p>",
                    "option": [
                        " 安装新版本构件可能与现有系统发生冲突 ",
                        " 构件通常也会经历一般软件产品具有的演化过程 ",
                        " 解决遗留系统移植问题，还需要通过使用包裹器构件，更适配旧版软件 ",
                        " 为安装新版本的构建，必须终止系统中所有已有版本构件后运行 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>此题采用排除法，ABC显然都是正确的。另，安装新版本构件时，有两种方式，一种是全量构建，另一种是增量构建，后一种不需要停止所有已有版本构件的运行只要升级增量部分即可。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356226",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669107885",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 38,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "39",
                    "correlation_time": "1669109840",
                    "question_id": "356227",
                    "difficulty_id": "3",
                    "question_title": "<p>软件复杂性度量中，（39）可以反映原代码结构的复杂度。</p>",
                    "option": [
                        " 模块数 ",
                        " 环路数 ",
                        " 用户数 ",
                        " 对象数 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>软件源码复杂度度量方法主要有三种：代码行、Helstead方法、McCabe方法（环形复杂度）。</p><p>1、代码行方法：是一种最简单的方法，该方法认为，代码行越多，软件越容易产生漏洞。</p><p>2、Helstead方法：思路是根据程序中可执行代码行的操作符和操作数的数量来计算程序的复杂性。操作符和操作数的量越大，程序结构就越复杂。</p><p>3、McCabe方法：环路复杂度用来定量度量程序的逻辑复杂度。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356227",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669107913",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 39,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "40",
                    "correlation_time": "1669109840",
                    "question_id": "356228",
                    "difficulty_id": "3",
                    "question_title": "<p>在白盒测试中，测试强度最高的是（40）</p>",
                    "option": [
                        " 语句覆盖 ",
                        " 分支覆盖 ",
                        " 判定覆盖 ",
                        " 路径覆盖 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>路径覆盖实际上考虑了程序中各种判定结果的所有可能组合，因此是一种较强的覆盖标准。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356228",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669107944",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统测试与运行维护"
                    ],
                    "single_score": 0,
                    "index": 40,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "41",
                    "correlation_time": "1669109840",
                    "question_id": "356229",
                    "difficulty_id": "3",
                    "question_title": "<p>在黑盒测试中，（41）方法最适合描述在多个逻辑条件取值组合所构成的复杂情况下，分别要执行哪些不同的动作。</p>",
                    "option": [
                        " 等价类 ",
                        " 边界类 ",
                        " 判定表 ",
                        " 因果图 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>详见系分教程原文14.3.3，判定表最适合描述在多个逻辑条件取值的组合所构成的复杂情况下，分别要执行哪些不同的动作。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356229",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669107977",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统测试与运行维护"
                    ],
                    "single_score": 0,
                    "index": 41,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "42",
                    "correlation_time": "1669109840",
                    "question_id": "356230",
                    "difficulty_id": "3",
                    "question_title": "<p>（42）的目的是测试软件变更之后，变更部分的正确性和对变更需求的符合性，以及软件原有的、正确的功能、性能和其它规定的要求的不损害性。</p>",
                    "option": [
                        " 验收测试 ",
                        " Alpha测试 ",
                        " Beta测试 ",
                        " 回归测试 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>详见系分教程原文14.4.4，回归测试的目的是测试软件变更之后，变更部分的正确性和对变更需求的符合性，以及软件原有的、正确的功能、性能和其他规定的要求的不损害性。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356230",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108011",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统测试与运行维护"
                    ],
                    "single_score": 0,
                    "index": 42,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "43",
                    "correlation_time": "1669109840",
                    "question_id": "356231",
                    "difficulty_id": "3",
                    "question_title": "<p>在对遗留系统进行评估时，对于技术含量较高、业务价值较低且仅能完成某个部门的业务管理的遗留系统，一般采用的遗留系统演化策略是（43）策略。</p>",
                    "option": [
                        " 淘汰 ",
                        " 继承 ",
                        " 集成 ",
                        " 改造 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>详见系分教程15.1.2&nbsp;遗留系统的演化策略。</p><p><img style=\"max-width:100%;height:auto\"  width=\"266\" height=\"234\" src=\"https://static2.51cto.com/edu/exam/ueditor1.4.3/themes/default/images/spacer.gif\"/></p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356231",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108049",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统测试与运行维护"
                    ],
                    "single_score": 0,
                    "index": 43,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "44",
                    "correlation_time": "1669109840",
                    "question_id": "356233",
                    "difficulty_id": "3",
                    "question_title": "<p>在软件体系结构的建模与描述中，多视图是一种描述软件体系结构的重要途径，其体现了（44）的思想。其中，4+1模型是描述软体系结的常用型，在该模型中，“1”指的是（45），</p>",
                    "option": [
                        " 关注点分离 ",
                        " 面网对象 ",
                        " 模型驱动 ",
                        " UML&nbsp; "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>Kruchten在1995年提出了一个“4＋1”的视图模型。“4＋1”视图模型从5个不同的视角来描述软件架构，每个视图只关心系统的一个侧面，5个视图结合在一起才能反映软件架构的全部内容，其思想即为关注点分离。其中，“4”为逻辑视图、开发视图、进程视图、物理视图；“1”为场景。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356232",
                    "sort_son": "1",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108098",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 44,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "45",
                    "correlation_time": "1669109840",
                    "question_id": "356234",
                    "difficulty_id": "3",
                    "question_title": "<p>在软件体系结构的建模与描述中，多视图是一种描述软件体系结构的重要途径，其体现了（44）的思想。其中，4+1模型是描述软体系结的常用型，在该模型中，“1”指的是（45），</p>",
                    "option": [
                        " 统一场景 ",
                        " 开发视图 ",
                        " 逻辑视图 ",
                        " 物理视图 "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>Kruchten在1995年提出了一个“4＋1”的视图模型。“4＋1”视图模型从5个不同的视角来描述软件架构，每个视图只关心系统的一个侧面，5个视图结合在一起才能反映软件架构的全部内容，其思想即为关注点分离。其中，“4”为逻辑视图、开发视图、进程视图、物理视图；“1”为场景。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356232",
                    "sort_son": "2",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108098",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 45,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "46",
                    "correlation_time": "1669109840",
                    "question_id": "356236",
                    "difficulty_id": "3",
                    "question_title": "<p>基于体系结构的软件设计（Architecture-Based Software Design. ABSD） 方法是体系结构驱动，是指构成体系结构的（46）的组合驱动的。ABSD方法是一个自项向下、递归细化的方法，软件系统的体系结构通过该方法得到细化，直到能产生（47）。</p>",
                    "option": [
                        " 产品、功能需求和设计活动 ",
                        " 商业、质量和功能需求 ",
                        " 商业、产品和功能需求 ",
                        " 商业、质量和设计活动 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>ABSD方法是体系结构驱动，即指构成体系结构的商业、质量和功能需求的组合驱动的。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356235",
                    "sort_son": "1",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108147",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 46,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "47",
                    "correlation_time": "1669109840",
                    "question_id": "356237",
                    "difficulty_id": "3",
                    "question_title": "<p>基于体系结构的软件设计（Architecture-Based Software Design. ABSD） 方法是体系结构驱动，是指构成体系结构的（46）的组合驱动的。ABSD方法是一个自项向下、递归细化的方法，软件系统的体系结构通过该方法得到细化，直到能产生（47）。</p>",
                    "option": [
                        " 软件产品和代码 ",
                        " 软件构件和类 ",
                        " 软件构件和连接件 ",
                        " 类和软件代码 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>ABSD方法是一个自顶向下，递归细化的方法，软件系统的体系结构通过该方法得到细化，直到能产生软件构件和类。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356235",
                    "sort_son": "2",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108147",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 47,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "48",
                    "correlation_time": "1669109840",
                    "question_id": "356239",
                    "difficulty_id": "3",
                    "question_title": "<p>软件体系结构风格是描述某一特定应用领城中系统组织方式的惯用模式。其中，在批处理风格软件体系结构中，每个处理步骤是一个单独的程序，每一步必须在前一步结束后才能开始，并且数据必须是完整的，以（48）的方式传递，基于规则的系统包括规则集、规则解释器、规则/数据选择器及（49）</p>",
                    "option": [
                        " 迭代 ",
                        " 整体 ",
                        " 统一格式 ",
                        " 递增 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>构件为一系列固定顺序的计算单元，构件之间只通过数据传递交互。每个处理步骤是一个独立的程序，每一步必须在其前一步结束后才能开始，数据必须是完整的，以整体的方式传递。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356238",
                    "sort_son": "1",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108197",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 48,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "49",
                    "correlation_time": "1669109840",
                    "question_id": "356240",
                    "difficulty_id": "3",
                    "question_title": "<p>软件体系结构风格是描述某一特定应用领城中系统组织方式的惯用模式。其中，在批处理风格软件体系结构中，每个处理步骤是一个单独的程序，每一步必须在前一步结束后才能开始，并且数据必须是完整的，以（48）的方式传递，基于规则的系统包括规则集、规则解释器、规则/数据选择器及（49）</p>",
                    "option": [
                        " 解释引擎 ",
                        " 虚拟机 ",
                        " 数据 ",
                        " 工作内存 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>基于规则的系统包括规则集、规则解释器、规则/数据选择器和工作内存，一般用在人工智能领域和DSS中。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356238",
                    "sort_son": "2",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108197",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 49,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "50",
                    "correlation_time": "1669109840",
                    "question_id": "356242",
                    "difficulty_id": "3",
                    "question_title": "<p>在软件架构复用中，（50）是指开发过程中，只要发现有可复用的资产，就对其进行复用。（51）是指在开发之前，就要进行规划，以决定哪些需要复用。</p>",
                    "option": [
                        " 发现复用 ",
                        " 机会复用 ",
                        " 资产复用 ",
                        " 过程复用 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>无</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356241",
                    "sort_son": "1",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108278",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 50,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "51",
                    "correlation_time": "1669109840",
                    "question_id": "356243",
                    "difficulty_id": "3",
                    "question_title": "<p>在软件架构复用中，（50）是指开发过程中，只要发现有可复用的资产，就对其进行复用。（51）是指在开发之前，就要进行规划，以决定哪些需要复用。</p>",
                    "option": [
                        " 预期复用 ",
                        " 计划复用 ",
                        " 资产复用 ",
                        " 系统复用 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "无",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356241",
                    "sort_son": "2",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108278",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 51,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "52",
                    "correlation_time": "1669109840",
                    "question_id": "356244",
                    "difficulty_id": "3",
                    "question_title": "<p>软件复用过程的主要阶段包括（52）</p>",
                    "option": [
                        " 分析可复用的软件资产、管理可复用资产和使用可复用资产 ",
                        " 构造/获取可复用的软件资产、管理可复用资产和使用可复用资产 ",
                        " 构造/取可复用的软件资产和管理可复用资产&nbsp; ",
                        " 分析可复用的软件资产和使用可复用资产 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>软件复用过程包含：创建、复用、支持、管理4个过程。</p><p>1、创建过程：界定和提供可复用资产，以满足复用者的需要；</p><p>2、复用过程：利用可复用资产来生产应用软件产品；</p><p>3、支持过程：全面支持可复用资产的获取、管理和维护工作；</p><p>4、管理过程：执行计划、启动、资源、跟踪，并协调其他各个过程；</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356244",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108312",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 52,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "53",
                    "correlation_time": "1669109840",
                    "question_id": "356245",
                    "difficulty_id": "3",
                    "question_title": "<p>DSSA（Domain Specific Software Architecture）就是在一个特定应用领域中为一组应用提供组织结构参考的标准软件体系结构，实施DSSA的过程中包含了一临基本的活动。其中，领域模型是（53）阶段的主要目标。</p>",
                    "option": [
                        " 领城设计 ",
                        " 领域实现 ",
                        " 领域分析 ",
                        " 领域工程 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>领域分析的主要目标是获得领域模型。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356245",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108341",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 53,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "54",
                    "correlation_time": "1669109840",
                    "question_id": "356247",
                    "difficulty_id": "3",
                    "question_title": "<p>软件系统质量属性（Quality Attribute）是一个系统的可测量或者可测试的属性，它被用来描述系统满足利益相关者需求的程度，其中，（54）关注的是当需要修改缺陷、增加功能、提高质量属性时，定位修改点并实施修改的难易程度，（55）关注的是当用户数和数据量增加时，软件系统维持高服务质量的能力。<br/></p>",
                    "option": [
                        " 可靠性 ",
                        " 可测试性 ",
                        " 可维护性 ",
                        " 可重用性<br/> "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>软件质量特性包括功能性、可靠性、易用性、效率、可维护性、可移植性等 6 个方面，每个方面都包含若干个子特性。</p><p>功能性：适合性、准确性、互操作性、依从性、安全性；</p><p>可靠性：成熟性、容错性、易恢复性；</p><p>易用性：易理解性、易学性、易操作性；</p><p>效率：时间特性、资源特性；</p><p>可维护性：易分析性、易改变性、稳定性、易测试性；</p><p>可移植性：适应性、易安装性、遵循性、易替换性；</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356246",
                    "sort_son": "1",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108401",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 54,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "55",
                    "correlation_time": "1669109840",
                    "question_id": "356248",
                    "difficulty_id": "3",
                    "question_title": "<p>软件系统质量属性（Quality Attribute）是一个系统的可测量或者可测试的属性，它被用来描述系统满足利益相关者需求的程度，其中，（54）关注的是当需要修改缺陷、增加功能、提高质量属性时，定位修改点并实施修改的难易程度，（55）关注的是当用户数和数据量增加时，软件系统维持高服务质量的能力。<br/></p>",
                    "option": [
                        " 可用性 ",
                        " 可扩展性 ",
                        " 可伸缩性 ",
                        " 可移植性 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>软件质量特性包括功能性、可靠性、易用性、效率、可维护性、可移植性等 6 个方面，每个方面都包含若干个子特性。</p><p>功能性：适合性、准确性、互操作性、依从性、安全性；</p><p>可靠性：成熟性、容错性、易恢复性；</p><p>易用性：易理解性、易学性、易操作性；</p><p>效率：时间特性、资源特性；</p><p>可维护性：易分析性、易改变性、稳定性、易测试性；</p><p>可移植性：适应性、易安装性、遵循性、易替换性；</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356246",
                    "sort_son": "2",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108401",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 55,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "56",
                    "correlation_time": "1669109840",
                    "question_id": "356250",
                    "difficulty_id": "3",
                    "question_title": "<p>为了精确描述软件系统的质量属性，通常采用质量属性场景（Quality Attribute Scenario）作为描述质量属性的手段。质量属性场景是一个具体的质量属性需求，是利益相关者与系统的交互的简短陈述，它由刺激源、刺激、环境、制品、（56）六部分组成。其中，想要学习系统特性、有效使用系统、使错误的影响最低、适配系统、对系统满意属于（57）质量属性场景的刺激。</p>",
                    "option": [
                        " 响应和响应度量 ",
                        " 系统和系统响应 ",
                        " 依赖和响 ",
                        " 响应和优先 "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>最常见的质量属性分别是：可用性（Availability）、可修改性（Modifiability）、性能（Performance）、安全性（Security）、可测试性（Testability）、易用性（Usability）。</p><p>刻画质量属性的手段由六部分组成：刺激源、刺激、环境、制品、响应、响应度量；</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356249",
                    "sort_son": "1",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108459",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 56,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "57",
                    "correlation_time": "1669109840",
                    "question_id": "356251",
                    "difficulty_id": "3",
                    "question_title": "<p>为了精确描述软件系统的质量属性，通常采用质量属性场景（Quality Attribute Scenario）作为描述质量属性的手段。质量属性场景是一个具体的质量属性需求，是利益相关者与系统的交互的简短陈述，它由刺激源、刺激、环境、制品、（56）六部分组成。其中，想要学习系统特性、有效使用系统、使错误的影响最低、适配系统、对系统满意属于（57）质量属性场景的刺激。</p>",
                    "option": [
                        " 可用性 ",
                        " 性能 ",
                        " 易用性&nbsp; &nbsp; &nbsp;&nbsp; ",
                        " 安全性 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>最常见的质量属性分别是：可用性（Availability）、可修改性（Modifiability）、性能（Performance）、安全性（Security）、可测试性（Testability）、易用性（Usability）。</p><p>刻画质量属性的手段由六部分组成：刺激源、刺激、环境、制品、响应、响应度量；</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356249",
                    "sort_son": "2",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108459",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 57,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "58",
                    "correlation_time": "1669109840",
                    "question_id": "356252",
                    "difficulty_id": "3",
                    "question_title": "<p>改变加密级别可能会对安全性和性能产生非常重要的影响，因此在软件架构评估中，该设计决策是一个（58）。</p>",
                    "option": [
                        " 敏感点 ",
                        " 风险点 ",
                        " 权衡点 ",
                        " 非风险点 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>敏感点是一个或多个构件的特性。权衡点是影响多个质量属性的特性，是多个质量属性的敏感点。由题干知，改变加密级别会影响安全性和性能两个质量属性，因此属于权衡点。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356252",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108538",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 58,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "59",
                    "correlation_time": "1669109840",
                    "question_id": "356253",
                    "difficulty_id": "3",
                    "question_title": "<p>效用树是采用架构权衡分析方法（Architecture Tradeoff Analysis Method， ATAM）进行架构评估的工具之一，其树形结构从根部到叶子节点依次为（59）。</p>",
                    "option": [
                        " 树根、属性分类、优先级，质量属性场景<br/> ",
                        " 树根、质量属性、属性分类，质量属性场景 ",
                        " 树根、优先级、质量属性、质量属性场景 ",
                        " 树根、质量属性、属性分类，优先级 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>质量属性效用树结构为：根——质量属性——属性求精（细&nbsp;分）——场景（叶）</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356253",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108570",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 59,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "60",
                    "correlation_time": "1669109840",
                    "question_id": "356254",
                    "difficulty_id": "3",
                    "question_title": "<p>平均失效等特时间（mean time to failure，MTTF）和平均失效间隔时间（mcan time between failure，MTBF）是进行系统可靠性分析时的要指标，在失效率为常数和修复时间很短的情况下，（60）。</p>",
                    "option": [
                        " MTTF远远小于MTBF ",
                        " MTTF和MTBF无法计算 ",
                        " MTTF远远大于MTBF ",
                        " MTTF和MTBF几乎相等 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>在失效率为常数和修复时间很短的情况下，MTTF和MTBF几乎相等。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356254",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108599",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 60,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "61",
                    "correlation_time": "1669109840",
                    "question_id": "356256",
                    "difficulty_id": "3",
                    "question_title": "<p>在进行软件系统安全性分折时，（61）保证信息不泄露给末授权的用户、实体或过程；完整性保证信息的完整和准确，防止信息被非法修改；（62）保证对信息的传播及内容具有控制的能力，防止为非法者所用。<br/></p>",
                    "option": [
                        " 完整性 ",
                        " 不可否认性&nbsp; &nbsp; ",
                        " 可控性 ",
                        " 机密性<br/> "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>信息安全包括的要素有：</p><p>1、机密性：确保信息不暴露给未授权的实体或进程。</p><p>2、完整性：只有得到允许的人才能修改数据，并且能够判别出数据是否已被篡改。</p><p>3、可用性：得到授权的实体在需要时可以访问数据，即攻击者不能占用所有的资源而阻碍授权者的工作。</p><p>4、可控性：可以控制授权范围内的信息流向及行为方式。</p><p>5、可审查性：对出现的网络安全问题提供调查的依据和手段。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356255",
                    "sort_son": "1",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108652",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统安全与可靠性设计"
                    ],
                    "single_score": 0,
                    "index": 61,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "62",
                    "correlation_time": "1669109840",
                    "question_id": "356257",
                    "difficulty_id": "3",
                    "question_title": "<p>在进行软件系统安全性分折时，（61）保证信息不泄露给末授权的用户、实体或过程；完整性保证信息的完整和准确，防止信息被非法修改；（62）保证对信息的传播及内容具有控制的能力，防止为非法者所用。<br/></p>",
                    "option": [
                        " 完整性&nbsp;&nbsp; ",
                        " 安全审计&nbsp;&nbsp; ",
                        " 加密性 ",
                        " 可控性<br/> "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>信息安全包括的要素有：</p><p>1、机密性：确保信息不暴露给未授权的实体或进程。</p><p>2、完整性：只有得到允许的人才能修改数据，并且能够判别出数据是否已被篡改。</p><p>3、可用性：得到授权的实体在需要时可以访问数据，即攻击者不能占用所有的资源而阻碍授权者的工作。</p><p>4、可控性：可以控制授权范围内的信息流向及行为方式。</p><p>5、可审查性：对出现的网络安全问题提供调查的依据和手段。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356255",
                    "sort_son": "2",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108652",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "系统安全与可靠性设计"
                    ],
                    "single_score": 0,
                    "index": 62,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "63",
                    "correlation_time": "1669109840",
                    "question_id": "356258",
                    "difficulty_id": "3",
                    "question_title": "<p>在进行架构评估时，首先要明确具体的质量目标，并以之作为判定该架构优劣的标准。为得出这些目标而采用的机制叫做场景，场景是从（63）的角度对与系统的交互的简短措述。</p>",
                    "option": [
                        " 用户 ",
                        " 系统架构师 ",
                        " 项目管理者 ",
                        " 风险承担者<br/> "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>场景（scenarios）在进行体系结构评估时，一般首先要精确地得出具体的质量目标，并以之作为判定该体系结构优劣的标准。为得出这些目标而采用的机制做场景。场景是从风险承担者的角度对与系统的交互的简短描述。在体系结构评估中，一般采用刺激（stimulus）、环境（environment）和响应（response）三方面来对场景进行描述。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356258",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108681",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 63,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "64",
                    "correlation_time": "1669109840",
                    "question_id": "356259",
                    "difficulty_id": "3",
                    "question_title": "<p>5G网络采用（64）可将5G网络分割成多张虚拟网络，每个虚拟网络的接入，传输和核心网是逻辑独立的，任何一个虚拟网络发生故障都不会影响到其它虚拟网络。</p>",
                    "option": [
                        " 网路切片技术 ",
                        " 边缘计算技术 ",
                        " 网络隔离技术 ",
                        " 软件定义网路技术<br/> "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>5G网络的切片技术是将5G网络分割成多张虚拟网络，从而支持更多的应用。就是将一个物理网络切割成多个虚拟的端到端的网络，每个虚拟网络之间，包括网络内的设备、接入、传输和核心网，是逻辑独立的，任何一个虚拟网络发生故障都不会影响到其它虚拟网络。在一个网络切片中，至少可分为无线网子切片、承载网子切片和核心网子切片三部分。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356259",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108720",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 计算机网络"
                    ],
                    "single_score": 0,
                    "index": 64,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "65",
                    "correlation_time": "1669109840",
                    "question_id": "356260",
                    "difficulty_id": "3",
                    "question_title": "<p>以下wifi认证方式中，（65）使用了AES加密算法，安全性更高。</p>",
                    "option": [
                        " 开放式 ",
                        " WPA ",
                        " WPA2&nbsp;&nbsp; ",
                        " WEP&nbsp; "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>开目前，无线网络中已存在好几种加密技术，由于安全性能的不同，无线设备的不同技术支持，支持的加密技术也不同，一般常见的有：WEP、WPA/WPA2、WPA-PSK/WPA2-PSK。</p><p>1、WEP安全加密方式</p><p>WEP(有线等效保密)，一种数据加密算法，用于提供等同于有线局域网的保护能力。它的安全技术源自于名为RC4的RSA数据加密技术，是无线局域网WLAN的必要的安全防护层。目前常见的是64位WEP加密和128位WEP加密，WEP基本已被弃用。</p><p>2、WPA安全加密方式</p><p>WEP之后，人们将期望转向了其升级后的WPA，与之前WEP的静态密钥不同，WPA需要不断的转换密钥。WPA采用有效的密钥分发机制，可以跨越不同厂商的无线网卡实现应用，其作为WEP的升级版，在安全的防护上比WEP更为周密，主要体现在身份认证、加密机制和数据包检查等方面，而且它还提升了无线网络的管理能力。</p><p>3、WPA2</p><p>WPA2是IEEE 802.11i标准的认证形式，WPA2实现了802.11i的强制性元素，特别是Michael算法被公认彻底安全的CCMP(计数器模式密码块链消息完整码协议)讯息认证码所取代、而RC4加密算法也被AES所取代。简言之，WPA2是WPA的增强版，安全性更高。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356260",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108752",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        " 计算机网络"
                    ],
                    "single_score": 0,
                    "index": 65,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "66",
                    "correlation_time": "1669109840",
                    "question_id": "356261",
                    "difficulty_id": "3",
                    "question_title": "<p>程序员甲将其编写完成的某软件程序发给同事乙并进行讨论，之后甲放弃该程序并决定重新开发，后来乙将该程序稍加修改并署自已名在某技术论坛发布。以下说法中，正确的是（66）。</p>",
                    "option": [
                        " 乙的行为侵犯了甲对该程序享有的软件著作权 ",
                        " 乙行为未侵权，因其发布的场合是以交流学习为目的的技术论坛 ",
                        " 乙的行为没有侵犯甲的软件著作权，因为甲已放弃该程序 ",
                        " 乙对该程序进行了修政，因此乙享有该序的款件著作权 "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>甲完成该软件的开发后就拥有了该软件的著作权，乙将该程序稍加修改就发布，侵犯了甲的软件著作权。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356261",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108784",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "知识产权"
                    ],
                    "single_score": 0,
                    "index": 66,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "67",
                    "correlation_time": "1669109840",
                    "question_id": "356262",
                    "difficulty_id": "3",
                    "question_title": "<p>以下关于软件著作权产生时间的叙述中，正确的是（67）。</p>",
                    "option": [
                        " 软件著作权产生自软件首次公开发表时 ",
                        " 软件著作权产生自开发者有开发意图时 ",
                        " 软件著作权产生自软件开发完成之日起 ",
                        " 软著作权产生自软件著作权登记时<br/> "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "",
                    "analyze": "<p>《中华人民共和国计算机软件保护条例》第十四条软件著作权自软件开发完成之日起产生。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356262",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108814",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "知识产权"
                    ],
                    "single_score": 0,
                    "index": 67,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "68",
                    "correlation_time": "1669109840",
                    "question_id": "356263",
                    "difficulty_id": "3",
                    "question_title": "<p>M公司将其开发的某软件产品注册了商标，为确保公司可在市场竟争中占据优势地位，M公司对员工进行了保密约束，此情形下，该公司不享有（68）。</p>",
                    "option": [
                        " 软件著作权 ",
                        " 专利权 ",
                        " 商业秘密权 ",
                        " 商标权 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>M公司的软件产品开发完成时就自动享有软件著作权，注册了商标就享有了商标权，对员工签了保密协议就享有了商业秘密权。因此只有专利权未提及。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356263",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108846",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "知识产权"
                    ],
                    "single_score": 0,
                    "index": 68,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "69",
                    "correlation_time": "1669109840",
                    "question_id": "356264",
                    "difficulty_id": "3",
                    "question_title": "<p>计算机产生的随机数大体上能在（0，1）区间内均匀分布。假设某初等函数f（x）在（0，1）区间内取值也在（0，1）区间内，如果由计算机产生的大量的（M个）随机数对（rl，r2）中，符合r2≤f（rl）条件的有N个，则N/M可作为（69）的近似计算结果。</p>",
                    "option": [
                        " 求解方程f（x）=x ",
                        " 求f（x）极大值 ",
                        " 求f（x）的极小值 ",
                        " 求积分<img style=\"max-width:100%;height:auto\" src=\"https://s2.51cto.com/images/20221122/1669108897509458.png\" title=\"1669108897509458.png\" alt=\"image.png\"/> "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>此题为蒙特卡罗方法（也称统计模拟法、统计试验法）的应用。蒙特卡罗是著名的赌城，该法通过构造一个与系统相近似的概率模型，然后在计算机上进行随机试验，通过对模型或过程的观察或抽样试验来计算这些参数或数字特征，最后求出近似值。它是一种用来模拟随机现象的数学方法，适用于对离散系统进行计算仿真试验。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669108921594979.png\" title=\"1669108921594979.png\" alt=\"image.png\"/><br/><p>∵ 随机数在（0，1）区间内均匀分布，M可以视为正方形的面积</p><p>又∵r2≤f（rl），N可以视为函数f（x）下方与正方形相交的面积（上图中阴影部分），而这恰好是函数f（x）在定积分的几何含义。</p><br/>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356264",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669108938",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "应用数学\t"
                    ],
                    "single_score": 0,
                    "index": 69,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "70",
                    "correlation_time": "1669109840",
                    "question_id": "356265",
                    "difficulty_id": "3",
                    "question_title": "<p>某项目包括A、B、C、D四道工序，各道工序之间的衔接关系、正常进度下各工序所需的时间和直接费用、赶工进度下所需的时间和直接费用如下表所示。该项目每天需要的间接费用为4.5万元。根据此表，以最低成本完成该项目需要（70）天。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669108956506875.png\" title=\"1669108956506875.png\" alt=\"image.png\"/>",
                    "option": [
                        "7",
                        "9",
                        "10",
                        "5"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>本题考查项目管理中的成本优化。从题目分析可得以下表格：</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669108986261834.png\" title=\"1669108986261834.png\" alt=\"image.png\"/><br/><p>1.绘制正常进度计划网络图如下：</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669109006454395.png\" title=\"1669109006454395.png\" alt=\"image.png\"/><br/><p>由上图可知，正常进度的关键路径为A-C-D，总工期为3+4+5＝l2天，总费用为10+15+12+8+12*4.5=99。</p><p>2.全部赶工后的工期，关键路径是A-C-D，总工期为1+2+2=5天，总费用为18+19+20+14+5*4.5=93.5。因为压缩过度，这个费用没有达到理想状态。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669109020733690.png\" title=\"1669109020733690.png\" alt=\"image.png\"/><br/><p>要想合理压缩成本，关键是在缩短总工期、减少间接费用的同时不引起直接费用显著增加，因此必须先缩短关键路径上的作业时间，详细操作如下：</p><p>3. 因为D是关键路径上的活动，而且压缩单位费用最低（2万/天），对D先压缩2天，总工期减为10天。本步骤增加直接费用2*2=4万元，节省间接费用2*4.5=9万元，节省费用9-4=5万元。此时总费用为99-5=94万元，关键路径有两条：A-B和A-C-D。如下图。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669109036441346.png\" title=\"1669109036441346.png\" alt=\"image.png\"/><br/><p>4. 把两条关键路径上的B和D同时压缩1天，总工期减为9天，本步骤增加直接费用2+1=3万元，节省间接费用4.5万元，节省费用4.5-3=1.5万元。此时总费用为94-1.5=92.5万元，关键路径仍为A-B和A-C-D。如下图。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669109049313711.png\" title=\"1669109049313711.png\" alt=\"image.png\"/><br/><p>5.最后把两条路径公共的工序A压缩2天，总工期减为7天，本步骤增加直接费用2*4=8万元，节省间接费用2*4.5=9万元，节省费用9-8=1万元。此时总费用为92.5-1=91.5万元，关键路径仍为A-B和A-C-D。如下图。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669109067673656.png\" title=\"1669109067673656.png\" alt=\"image.png\"/><br/><p>至此，A、B、C、D均已赶工到最大限度，总工期为7天，总费用为91.5万元，为最低成本。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356265",
                    "sort_son": "0",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669109138",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 70,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "71",
                    "correlation_time": "1669109840",
                    "question_id": "356267",
                    "difficulty_id": "3",
                    "question_title": "<p>Micro-service is a software development technology, which advocates dividing a single application into a group of small services, which coordinates and cooperates with each other to provide ultimate value for users.The micro-service&nbsp;（71） has many important benefits.First,it solves the problem of business complexity. It decomposes the original huge single application into a group of services. Although the total amount of functions remains the same, the application has been decomposed into manageable services.The development speed of a single service is much faster, and it is easier to understand and&nbsp;（72）. Second, this architecture allows each service to be （73 ） &nbsp;independently by a team. Developers are free to choose any appropriate technology. Third, the micro-service architecture mode enables each service to be&nbsp;（74 ） independently. Developers never need to coordinate the deployment of local changes to their services. These types of changes can be deployed immediately after testing. Finally, the micro-service architecture enables each service to （75 ） independently.</p>",
                    "option": [
                        " architecture ",
                        " software ",
                        " application ",
                        " technology "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "",
                    "analyze": "<p>微服务是一种软件开发技术，它主张将单个应用程序划分为一组小服务，相互协调合作，为用户提供终极价值。微服务架构有许多重要的好处。首先，它解决了业务复杂性的问题。它将原来庞大的单个应用程序分解为一组服务，尽管功能的总数保持不变，但应用程序已被分解为可管理的服务。单个服务的开发速度要快得多，而且更容易理解和维护；其次，这种架构允许每个服务由一个团队独立开发，开发人员可以自由选择任何适当的技术；再次，微服务架构模式允许各个服务独立部署，开发人员永远不需要协调对其服务的本地更改的部署，这些类型的更改可以在测试后立即部署；最后，微服务架构允许每个服务独立扩展。</p><p>参考答案：（71）&nbsp;A（72）&nbsp;B（73）&nbsp;B（74）&nbsp;D（75）&nbsp;D</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356266",
                    "sort_son": "1",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669109213",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "专业英语"
                    ],
                    "single_score": 0,
                    "index": 71,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "72",
                    "correlation_time": "1669109840",
                    "question_id": "356268",
                    "difficulty_id": "3",
                    "question_title": "<p>Micro-service is a software development technology, which advocates dividing a single application into a group of small services, which coordinates and cooperates with each other to provide ultimate value for users.The micro-service&nbsp;（71） has many important benefits.First,it solves the problem of business complexity. It decomposes the original huge single application into a group of services. Although the total amount of functions remains the same, the application has been decomposed into manageable services.The development speed of a single service is much faster, and it is easier to understand and&nbsp;（72）. Second, this architecture allows each service to be （73 ） &nbsp;independently by a team. Developers are free to choose any appropriate technology. Third, the micro-service architecture mode enables each service to be&nbsp;（74 ） independently. Developers never need to coordinate the deployment of local changes to their services. These types of changes can be deployed immediately after testing. Finally, the micro-service architecture enables each service to （75 ） independently.</p>",
                    "option": [
                        " develop ",
                        " maintain ",
                        " utilized ",
                        " deploy "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>微服务是一种软件开发技术，它主张将单个应用程序划分为一组小服务，相互协调合作，为用户提供终极价值。微服务架构有许多重要的好处。首先，它解决了业务复杂性的问题。它将原来庞大的单个应用程序分解为一组服务，尽管功能的总数保持不变，但应用程序已被分解为可管理的服务。单个服务的开发速度要快得多，而且更容易理解和维护；其次，这种架构允许每个服务由一个团队独立开发，开发人员可以自由选择任何适当的技术；再次，微服务架构模式允许各个服务独立部署，开发人员永远不需要协调对其服务的本地更改的部署，这些类型的更改可以在测试后立即部署；最后，微服务架构允许每个服务独立扩展。</p><p>参考答案：（71）&nbsp;A（72）&nbsp;B（73）&nbsp;B（74）&nbsp;D（75）&nbsp;D</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356266",
                    "sort_son": "2",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669109213",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "专业英语"
                    ],
                    "single_score": 0,
                    "index": 72,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "73",
                    "correlation_time": "1669109840",
                    "question_id": "356270",
                    "difficulty_id": "3",
                    "question_title": "<p>Micro-service is a software development technology, which advocates dividing a single application into a group of small services, which coordinates and cooperates with each other to provide ultimate value for users.The micro-service&nbsp;（71） has many important benefits.First,it solves the problem of business complexity. It decomposes the original huge single application into a group of services. Although the total amount of functions remains the same, the application has been decomposed into manageable services.The development speed of a single service is much faster, and it is easier to understand and&nbsp;（72）. Second, this architecture allows each service to be （73 ） &nbsp;independently by a team. Developers are free to choose any appropriate technology. Third, the micro-service architecture mode enables each service to be&nbsp;（74 ） independently. Developers never need to coordinate the deployment of local changes to their services. These types of changes can be deployed immediately after testing. Finally, the micro-service architecture enables each service to （75 ） independently.</p>",
                    "option": [
                        " planned ",
                        " developed ",
                        " utilized ",
                        " deployed "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "",
                    "analyze": "<p>微服务是一种软件开发技术，它主张将单个应用程序划分为一组小服务，相互协调合作，为用户提供终极价值。微服务架构有许多重要的好处。首先，它解决了业务复杂性的问题。它将原来庞大的单个应用程序分解为一组服务，尽管功能的总数保持不变，但应用程序已被分解为可管理的服务。单个服务的开发速度要快得多，而且更容易理解和维护；其次，这种架构允许每个服务由一个团队独立开发，开发人员可以自由选择任何适当的技术；再次，微服务架构模式允许各个服务独立部署，开发人员永远不需要协调对其服务的本地更改的部署，这些类型的更改可以在测试后立即部署；最后，微服务架构允许每个服务独立扩展。</p><p>参考答案：（71）&nbsp;A（72）&nbsp;B（73）&nbsp;B（74）&nbsp;D（75）&nbsp;D</p><p><br/></p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356269",
                    "sort_son": "3",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669109397",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "专业英语"
                    ],
                    "single_score": 0,
                    "index": 73,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "74",
                    "correlation_time": "1669109840",
                    "question_id": "356271",
                    "difficulty_id": "3",
                    "question_title": "<p>Micro-service is a software development technology, which advocates dividing a single application into a group of small services, which coordinates and cooperates with each other to provide ultimate value for users.The micro-service&nbsp;（71） has many important benefits.First,it solves the problem of business complexity. It decomposes the original huge single application into a group of services. Although the total amount of functions remains the same, the application has been decomposed into manageable services.The development speed of a single service is much faster, and it is easier to understand and&nbsp;（72）. Second, this architecture allows each service to be （73 ） &nbsp;independently by a team. Developers are free to choose any appropriate technology. Third, the micro-service architecture mode enables each service to be&nbsp;（74 ） independently. Developers never need to coordinate the deployment of local changes to their services. These types of changes can be deployed immediately after testing. Finally, the micro-service architecture enables each service to （75 ） independently.</p>",
                    "option": [
                        " utilized ",
                        " developed ",
                        " tested ",
                        " deployed "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>微服务是一种软件开发技术，它主张将单个应用程序划分为一组小服务，相互协调合作，为用户提供终极价值。微服务架构有许多重要的好处。首先，它解决了业务复杂性的问题。它将原来庞大的单个应用程序分解为一组服务，尽管功能的总数保持不变，但应用程序已被分解为可管理的服务。单个服务的开发速度要快得多，而且更容易理解和维护；其次，这种架构允许每个服务由一个团队独立开发，开发人员可以自由选择任何适当的技术；再次，微服务架构模式允许各个服务独立部署，开发人员永远不需要协调对其服务的本地更改的部署，这些类型的更改可以在测试后立即部署；最后，微服务架构允许每个服务独立扩展。</p><p>参考答案：（71）&nbsp;A（72）&nbsp;B（73）&nbsp;B（74）&nbsp;D（75）&nbsp;D</p><p>&nbsp;</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356269",
                    "sort_son": "4",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669109397",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "专业英语"
                    ],
                    "single_score": 0,
                    "index": 74,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "75",
                    "correlation_time": "1669109840",
                    "question_id": "356272",
                    "difficulty_id": "3",
                    "question_title": "<p>Micro-service is a software development technology, which advocates dividing a single application into a group of small services, which coordinates and cooperates with each other to provide ultimate value for users.The micro-service&nbsp;（71） has many important benefits.First,it solves the problem of business complexity. It decomposes the original huge single application into a group of services. Although the total amount of functions remains the same, the application has been decomposed into manageable services.The development speed of a single service is much faster, and it is easier to understand and&nbsp;（72）. Second, this architecture allows each service to be （73 ） &nbsp;independently by a team. Developers are free to choose any appropriate technology. Third, the micro-service architecture mode enables each service to be&nbsp;（74 ） independently. Developers never need to coordinate the deployment of local changes to their services. These types of changes can be deployed immediately after testing. Finally, the micro-service architecture enables each service to （75 ） independently.</p>",
                    "option": [
                        " analyze ",
                        " use ",
                        " design ",
                        " expand "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "",
                    "analyze": "<p>微服务是一种软件开发技术，它主张将单个应用程序划分为一组小服务，相互协调合作，为用户提供终极价值。微服务架构有许多重要的好处。首先，它解决了业务复杂性的问题。它将原来庞大的单个应用程序分解为一组服务，尽管功能的总数保持不变，但应用程序已被分解为可管理的服务。单个服务的开发速度要快得多，而且更容易理解和维护；其次，这种架构允许每个服务由一个团队独立开发，开发人员可以自由选择任何适当的技术；再次，微服务架构模式允许各个服务独立部署，开发人员永远不需要协调对其服务的本地更改的部署，这些类型的更改可以在测试后立即部署；最后，微服务架构允许每个服务独立扩展。</p><p>参考答案：（71）&nbsp;A（72）&nbsp;B（73）&nbsp;B（74）&nbsp;D（75）&nbsp;D</p><p>&nbsp;</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "356269",
                    "sort_son": "5",
                    "creater_name": "mb618b3cf4e0052",
                    "create_time": "1669109397",
                    "review_status": "0",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "16126",
                    "type": "3",
                    "title": "2022年11月 系统架构设计师上午题",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "1",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "0",
                    "person_num": "0",
                    "avg_time": "0.0",
                    "is_right": "0",
                    "chapter_name": [
                        "专业英语"
                    ],
                    "single_score": 0,
                    "index": 75,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                }
            ],
            "summary": {
                "radio": {
                    "total_question": 75,
                    "total_score": 75,
                    "question_types": [
                        1,
                        9,
                        11
                    ]
                },
                "multiple": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        2,
                        12
                    ]
                },
                "budingxiang": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        7
                    ]
                },
                "judge": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        3,
                        13
                    ]
                },
                "cloze": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        8
                    ]
                },
                "fill": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        4
                    ]
                },
                "qanda": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        5,
                        14
                    ]
                },
                "program": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        6
                    ]
                },
                "material": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        10
                    ]
                }
            }
        },
        "pagination": {
            "curPage": 1,
            "pageSize": 250,
            "total": 75,
            "hasNextPage": false
        },
        "totalOrder": [
            {
                "index": 1,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 2,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 3,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 4,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 5,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 6,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 7,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 8,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 9,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 10,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 11,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 12,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 13,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 14,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 15,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 16,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 17,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 18,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 19,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 20,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 21,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 22,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 23,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 24,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 25,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 26,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 27,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 28,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 29,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 30,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 31,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 32,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 33,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 34,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 35,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 36,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 37,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 38,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 39,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 40,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 41,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 42,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 43,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 44,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 45,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 46,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 47,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 48,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 49,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 50,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 51,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 52,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 53,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 54,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 55,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 56,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 57,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 58,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 59,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 60,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 61,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 62,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 63,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 64,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 65,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 66,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 67,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 68,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 69,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 70,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 71,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 72,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 73,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 74,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 75,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            }
        ]
    }
}
