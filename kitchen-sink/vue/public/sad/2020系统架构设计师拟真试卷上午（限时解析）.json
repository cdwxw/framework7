{
    "msg": "成功",
    "status": 0,
    "data": {
        "data": {
            "examine": {
                "examine_id": 10609,
                "answer_id": "3939947",
                "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                "len_time": 0,
                "total_score": "75",
                "get_score": "0",
                "total_question": 75,
                "proposal": "",
                "proposalList": [
                    {
                        "proposal": "",
                        "comment_time": "0",
                        "log_id": "8588471"
                    }
                ],
                "platform_id": "2",
                "submit_limit_num": "0",
                "version_id": "0",
                "version_year": "0",
                "mark_question_ids": []
            },
            "question": [
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284637",
                    "difficulty_id": "3",
                    "question_title": "某计算 机系统的结构如下图所示，按照弗林（Michael J.Flynn）提出的分类法，它属于 （1），其中，PUi i=1,…,n）为处理单元，CU 为控制部件，MM j（j=1,…,n）为存储部件。该计算机（2） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602642648929168.jpg\" title=\"1602642648929168.jpg\" alt=\"1.jpg\"/>",
                    "option": [
                        "单指令流单数据流计算机（SISD）",
                        "单指令流多数据流计算机（SIMD）",
                        "多指令流单数据流计算机（MISD）",
                        "多指令流多数据流计算机（MIMD）"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "1966年，MJ.Flynn根据指令流(Instruction Stream机器执行指令序列）、数据流(Data Stream指令流调用的数据序列）、多倍性（Multiplicity在系统结构的流程瓶颈上同时执行的指令或数据可能最大个数）将系统结构分成单指令 流单数据流（SISD)、单指令流多数据流（SIMD)、多指令流单数据流（MISD)、多指令流多数据流（MIMD)。计算机系统中开发并行性的方法有资源重复、时间重叠和资源共享3种基本途径。题中的计算机有一个控制单元，所以是单指令流；多个处理和存储部件，是多数据流，因此，属于单指令流多数据流计算机（SIMD)。 14题显然，该计算机将大量重复设置的处理单元按一定方式互连成阵列，在单一控制部件CU(Control Unit)控制下对 各自所分配的不同数据并行执行同一指令规定的操作，是操作并行的SIMD计算机。因此，采用了资源重复的措施开发并行性。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284636",
                    "sort_son": "1",
                    "creater_name": "试题账号",
                    "create_time": "1602642693",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "计算机系统基础"
                    ],
                    "single_score": 0,
                    "index": 1,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [
                        "A"
                    ],
                    "answer_imgs": [],
                    "result": 2,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284638",
                    "difficulty_id": "3",
                    "question_title": "某计算 机系统的结构如下图所示，按照弗林（Michael J.Flynn）提出的分类法，它属于 （1），其中，PUi i=1,…,n）为处理单元，CU 为控制部件，MM j（j=1,…,n）为存储部件。该计算机（2） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602642648929168.jpg\" title=\"1602642648929168.jpg\" alt=\"1.jpg\"/>",
                    "option": [
                        "通过时间重叠实现并行性",
                        "通过资源重复实现并行性",
                        "通过资源共享实现并行性",
                        "通过精简指令系统实现并行性"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "1966年，MJ.Flynn根据指令流(Instruction Stream机器执行指令序列）、数据流(Data Stream指令流调用的数据序列）、多倍性（Multiplicity在系统结构的流程瓶颈上同时执行的指令或数据可能最大个数）将系统结构分成单指令 流单数据流（SISD)、单指令流多数据流（SIMD)、多指令流单数据流（MISD)、多指令流多数据流（MIMD)。计算机系统中开发并行性的方法有资源重复、时间重叠和资源共享3种基本途径。题中的计算机有一个控制单元，所以是单指令流；多个处理和存储部件，是多数据流，因此，属于单指令流多数据流计算机（SIMD)。 14题显然，该计算机将大量重复设置的处理单元按一定方式互连成阵列，在单一控制部件CU(Control Unit)控制下对 各自所分配的不同数据并行执行同一指令规定的操作，是操作并行的SIMD计算机。因此，采用了资源重复的措施开发并行性。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284636",
                    "sort_son": "2",
                    "creater_name": "试题账号",
                    "create_time": "1602642693",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "计算机系统基础"
                    ],
                    "single_score": 0,
                    "index": 2,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284640",
                    "difficulty_id": "3",
                    "question_title": "<p>某文件管理系统在磁盘上建立了位示图（bitmap），记录磁盘的使用情况。若磁盘上物理块的编号依次为：0、1、2、....；系统中的字长为32位，位示图中字的编号依次为：0、1、2、..，每个字中的一个二进制位对应文件存储器上的一个物理块，取值0和1分别表示物理块是空闲或占用。假设操作系统将2053号物理块分配给某文件，那么该物理块的使用情况在位示图中编号为（ ）的字中描述，系统应该将（ ）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210416/1618544321114719.png\" title=\"1618544321114719.png\" alt=\"284640.png\"/></p>",
                    "option": [
                        "32",
                        "33",
                        " 64 ",
                        "65"
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "2054/32=64.1875，属于第65个字。题干问的是编号，编号64的是第65个字。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284639",
                    "sort_son": "1",
                    "creater_name": "wx5f1e961739eb1",
                    "create_time": "1602642761",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "计算机系统基础"
                    ],
                    "single_score": 0,
                    "index": 3,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284641",
                    "difficulty_id": "3",
                    "question_title": "<p>某文件管理系统在磁盘上建立了位示图（bitmap），记录磁盘的使用情况。若磁盘上物理块的编号依次为：0、1、2、....；系统中的字长为32位，位示图中字的编号依次为：0、1、2、..，每个字中的一个二进制位对应文件存储器上的一个物理块，取值0和1分别表示物理块是空闲或占用。假设操作系统将2053号物理块分配给某文件，那么该物理块的使用情况在位示图中编号为（ ）的字中描述，系统应该将（ ）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210416/1618544321114719.png\" title=\"1618544321114719.png\" alt=\"284640.png\"/></p>",
                    "option": [
                        "该字的6号位置“0”",
                        "该字的6号位置“1”",
                        "该字的5号位置“0”",
                        "该字的5号位置“1”"
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>2054 % 32 = 6<br/>题干问的是编号，编号5的是第6位<br/>取值0和1分别表示物理块是空闲或占用</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284639",
                    "sort_son": "2",
                    "creater_name": "wx5f1e961739eb1",
                    "create_time": "1602642761",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "计算机系统基础"
                    ],
                    "single_score": 0,
                    "index": 4,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284643",
                    "difficulty_id": "3",
                    "question_title": "<p>UML的事物是对模型中最具有代表性的成分的抽象，（5）是模型的静态部分，描述概念或物理元素；（6）用来描述、说明和标注模型的任何元素。</p>",
                    "option": [
                        "结构事物",
                        "分组事物",
                        "行为事物",
                        "注释事物"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>UML中有4种事物:</p><p>1、结构事物是UML模型中的名词。它们通常是模型的静态部分,描述概念或物理元素；</p><p>2、行为事物是UML模型的动态部分。它们是模型中的动词,描述了跨越时间和空间的行为；</p><p>3、分组事物是UML模型的组仅部分。它们是—些由模型分解成的盒子；</p><p>4、注释事物是UML模型的解释部分。这些注释事物用来描述、说明和标注模型的任何元素。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284642",
                    "sort_son": "1",
                    "creater_name": "龚倩",
                    "create_time": "1602642827",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 5,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284644",
                    "difficulty_id": "3",
                    "question_title": "<p>UML的事物是对模型中最具有代表性的成分的抽象，（5）是模型的静态部分，描述概念或物理元素；（6）用来描述、说明和标注模型的任何元素。</p>",
                    "option": [
                        "分组事物",
                        "注释事物",
                        "结构事物",
                        "行为事物"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>UML中有4种事物:</p><p>1、结构事物是UML模型中的名词。它们通常是模型的静态部分,描述概念或物理元素；</p><p>2、行为事物是UML模型的动态部分。它们是模型中的动词,描述了跨越时间和空间的行为；</p><p>3、分组事物是UML模型的组仅部分。它们是—些由模型分解成的盒子；</p><p>4、注释事物是UML模型的解释部分。这些注释事物用来描述、说明和标注模型的任何元素。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284642",
                    "sort_son": "2",
                    "creater_name": "龚倩",
                    "create_time": "1602642827",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 6,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284646",
                    "difficulty_id": "3",
                    "question_title": "<p>UML用关系把事物结合在一起，（7）描述一个事物发生变化会影响另一个事物的语义；（8）描述特殊元素的对象可替换一般元素的对象。</p>",
                    "option": [
                        "聚合关系",
                        "关联关系",
                        "包含关系",
                        "依赖关系"
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>UML中有4种关系：</p><p>1、依赖是两个事物间的语义关系，其中一个事物（独立事物）发生变化会影响另一个事物（依赖事物）的语义；</p><p>2、关联是一种结构关系，描述了一组链，链式对象之间的连接，聚合是一种特殊类型的关联，描述整体与部分间的结构关系；</p><p>3、泛化是一种特殊一般关系，特殊元素的对象可替代一般元素的对象；</p><p>4、实现是类元之间的语义关系，其中一个类元指定了由另一个类元保证执行的契约。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284645",
                    "sort_son": "1",
                    "creater_name": "wx5f1e961739eb1",
                    "create_time": "1602642890",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 7,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284647",
                    "difficulty_id": "3",
                    "question_title": "<p>UML用关系把事物结合在一起，（7）描述一个事物发生变化会影响另一个事物的语义；（8）描述特殊元素的对象可替换一般元素的对象。</p>",
                    "option": [
                        "实现关系",
                        "聚合关系",
                        "泛化关系",
                        "关联关系"
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>UML中有4种关系：</p><p>1、依赖是两个事物间的语义关系，其中一个事物（独立事物）发生变化会影响另一个事物（依赖事物）的语义；</p><p>2、关联是一种结构关系，描述了一组链，链式对象之间的连接，聚合是一种特殊类型的关联，描述整体与部分间的结构关系；</p><p>3、泛化是一种特殊一般关系，特殊元素的对象可替代一般元素的对象；</p><p>4、实现是类元之间的语义关系，其中一个类元指定了由另一个类元保证执行的契约。</p><p><br/></p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284645",
                    "sort_son": "2",
                    "creater_name": "wx5f1e961739eb1",
                    "create_time": "1602642890",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 8,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "1602642919",
                    "question_id": "284648",
                    "difficulty_id": "3",
                    "question_title": "<p>某开发组在开发某个系统时，各个阶段具有严格的界限，只有一个阶段的获得认可才能进行下一个阶段的工作，则该开发组最可能采用的软件开发方法是（9）。</p>",
                    "option": [
                        " 构件化方法 ",
                        " 结构化方法 ",
                        " 面向对象方法 ",
                        " 快速原型法 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>结构化方法要求各个阶段具有严格的界限，一个阶段获得认可后才能进行下一个阶段的工作。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284648",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602642919",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 9,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284652",
                    "difficulty_id": "3",
                    "question_title": "<p>进程 P1、P2、P3、P4、P5 的前趋图如下。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643005134181.jpg\" title=\"1602643005134181.jpg\" alt=\"1.jpg\"/></p><p>若用 PV 操作控制进程并发执行的过程，则需要相应于进程执行过程设置 5 个信号量 S1、S2、S3、S4 和 S5，且信号量初值都等于零。下图中 a 处应填写 （12） ；b 和 c、d 和 e 处应分别填写 （13），f、g 和 h 应分别填写 （14） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643009500828.jpg\" title=\"1602643009500828.jpg\" alt=\"2.jpg\"/></p>",
                    "option": [
                        " P（S1）和 P（S2） ",
                        "V（S1）和 V（S2）",
                        "P（S1）和 V（S2）",
                        "P（S2）和 V（S1）"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "试题12<br/>根据前驱图，P1进程运行结束需要利用V操作分别通知P2和P3进程，所以用V(S1)操作通知P2进程，用V(S2)操作 通知P3进程。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284651",
                    "sort_son": "1",
                    "creater_name": "wx5f1e961739eb1",
                    "create_time": "1602643083",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "操作系统\t"
                    ],
                    "single_score": 0,
                    "index": 10,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284653",
                    "difficulty_id": "3",
                    "question_title": "<p>进程 P1、P2、P3、P4、P5 的前趋图如下。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643005134181.jpg\" title=\"1602643005134181.jpg\" alt=\"1.jpg\"/></p><p>若用 PV 操作控制进程并发执行的过程，则需要相应于进程执行过程设置 5 个信号量 S1、S2、S3、S4 和 S5，且信号量初值都等于零。下图中 a 处应填写 （12） ；b 和 c、d 和 e 处应分别填写 （13），f、g 和 h 应分别填写 （14） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643009500828.jpg\" title=\"1602643009500828.jpg\" alt=\"2.jpg\"/></p>",
                    "option": [
                        "P（S1）和 P（S2）、V（S3）和 V（S4）",
                        "P（S1）和 P（S2）、P（S3）和 P（S4）",
                        "V（S1）和 V（S2）、P（S3）和 P（S4）",
                        "P（S1）和 V（S3）、P（S2）和 V（S4）"
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "试题13<br/>根据前驱图，P2进程开始运行前必须等待P1进程的通知，需要用P(S1)操作测试P1进程是否运行完，P2进程运行结束需要利用V(S3)操作通知P4进程。同理根据前驱图P3进程开始运行前必须等待P1进程的通知，需要用P(S2)操作测试P1进程是否运行完，P3进程运行结朿需要利用V(S4)操作通知P4进程。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284651",
                    "sort_son": "2",
                    "creater_name": "wx5f1e961739eb1",
                    "create_time": "1602643083",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "操作系统\t"
                    ],
                    "single_score": 0,
                    "index": 11,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284654",
                    "difficulty_id": "3",
                    "question_title": "<p>进程 P1、P2、P3、P4、P5 的前趋图如下。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643005134181.jpg\" title=\"1602643005134181.jpg\" alt=\"1.jpg\"/></p><p>若用 PV 操作控制进程并发执行的过程，则需要相应于进程执行过程设置 5 个信号量 S1、S2、S3、S4 和 S5，且信号量初值都等于零。下图中 a 处应填写 （12） ；b 和 c、d 和 e 处应分别填写 （13），f、g 和 h 应分别填写 （14） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643009500828.jpg\" title=\"1602643009500828.jpg\" alt=\"2.jpg\"/></p>",
                    "option": [
                        "P（S3）V（S4）、V（S5）和 P（S5）&nbsp;",
                        "V（S3）V（S4）、P（S5）和 V（S5）",
                        "P（S3）P（S4）、V（S5）和 P（S5）",
                        "V（S3）P（S4）、P（S5）和 V（S5）"
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "试题14<br/>根据前驱图，P4进程开始运行前必须等待P2和P3进程的通知，需要用P(S3)和P(S4)操作分别测试P2和P3进程是否运行完，故空f应填写P(S3)P(S4)。P4进程运行结束需要利用V(S5)操作通知P5进程，故空g应填写V(S5)。根据前驱图，P5进程开始运行前必须等待P4进程的通知，需要用P(S5)操作测试P4进程是否运行完，故空h应填写P(S5)。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284651",
                    "sort_son": "3",
                    "creater_name": "wx5f1e961739eb1",
                    "create_time": "1602643083",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "操作系统\t"
                    ],
                    "single_score": 0,
                    "index": 12,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284657",
                    "difficulty_id": "3",
                    "question_title": "<p>“4+1”视图主要用于描述系统逻辑架构，最早由Philippe Kruchten于1995年提出。其中（16）视图用于描述对象模型，并说明系统应该为用户提供哪些服务。当采用面向对象的设计方法描述对象模型时，通常使用（17）表达类的内部属性和行为，以及类集合之间的交互关系；采用（18）定义对象的内部行为。</p>",
                    "option": [
                        "逻辑",
                        "过程",
                        "开发",
                        "物理"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>“4+1”视图是对逻辑架构进行描述，最早由Philippe Kruchten提出，他在1995年的IEEE Software上发表了题为The 4+1 View Model of Architecture的论文，引起了业界的极大关注，并最终被RUP采纳，现在已经成为架构设计的结构标准。“4+1”视图主要包括：</p><p>①逻辑视图(Logical View)，设计的对象模型(使用面向对象的设计方法时)。</p><p>②过程视图(Process View)，捕捉设计的并发和同步特征。</p><p>③物理视图(Physical View)，描述了软件到硬件的映射，反映了分布式特性。</p><p>④开发视图(Development View)，描述了在开发环境中软件的静态组织结构。</p><p>⑤架构的描述，即所做的各种决定，可以围绕着这四个视图来组织，然后由一些用例(Use Cases)或场景(Scenarios)来说明，从而形成了第五个视图。</p><p>当采用面向对象的设计方法描述对象模型时，通常使用类图表达类的内部属性和行为，以及类集合之间的交互关系；采用状态图定义对象的内部行为。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284656",
                    "sort_son": "1",
                    "creater_name": "龚倩",
                    "create_time": "1602643179",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统分析与设计"
                    ],
                    "single_score": 0,
                    "index": 13,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284658",
                    "difficulty_id": "3",
                    "question_title": "<p>“4+1”视图主要用于描述系统逻辑架构，最早由Philippe Kruchten于1995年提出。其中（16）视图用于描述对象模型，并说明系统应该为用户提供哪些服务。当采用面向对象的设计方法描述对象模型时，通常使用（17）表达类的内部属性和行为，以及类集合之间的交互关系；采用（18）定义对象的内部行为。</p>",
                    "option": [
                        "对象图",
                        "活动图",
                        "状态图",
                        "类图"
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>“4+1”视图是对逻辑架构进行描述，最早由Philippe Kruchten提出，他在1995年的IEEE Software上发表了题为The 4+1 View Model of Architecture的论文，引起了业界的极大关注，并最终被RUP采纳，现在已经成为架构设计的结构标准。“4+1”视图主要包括：</p><p>①逻辑视图(Logical View)，设计的对象模型(使用面向对象的设计方法时)。</p><p>②过程视图(Process View)，捕捉设计的并发和同步特征。</p><p>③物理视图(Physical View)，描述了软件到硬件的映射，反映了分布式特性。</p><p>④开发视图(Development View)，描述了在开发环境中软件的静态组织结构。</p><p>⑤架构的描述，即所做的各种决定，可以围绕着这四个视图来组织，然后由一些用例(Use Cases)或场景(Scenarios)来说明，从而形成了第五个视图。</p><p>当采用面向对象的设计方法描述对象模型时，通常使用类图表达类的内部属性和行为，以及类集合之间的交互关系；采用状态图定义对象的内部行为。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284656",
                    "sort_son": "2",
                    "creater_name": "龚倩",
                    "create_time": "1602643179",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统分析与设计"
                    ],
                    "single_score": 0,
                    "index": 14,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284659",
                    "difficulty_id": "3",
                    "question_title": "<p>“4+1”视图主要用于描述系统逻辑架构，最早由Philippe Kruchten于1995年提出。其中（16）视图用于描述对象模型，并说明系统应该为用户提供哪些服务。当采用面向对象的设计方法描述对象模型时，通常使用（17）表达类的内部属性和行为，以及类集合之间的交互关系；采用（18）定义对象的内部行为。</p>",
                    "option": [
                        "对象图",
                        "活动图",
                        "状态图",
                        "类图"
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>“4+1”视图是对逻辑架构进行描述，最早由Philippe Kruchten提出，他在1995年的IEEE Software上发表了题为The 4+1 View Model of Architecture的论文，引起了业界的极大关注，并最终被RUP采纳，现在已经成为架构设计的结构标准。“4+1”视图主要包括：</p><p>①逻辑视图(Logical View)，设计的对象模型(使用面向对象的设计方法时)。</p><p>②过程视图(Process View)，捕捉设计的并发和同步特征。</p><p>③物理视图(Physical View)，描述了软件到硬件的映射，反映了分布式特性。</p><p>④开发视图(Development View)，描述了在开发环境中软件的静态组织结构。</p><p>⑤架构的描述，即所做的各种决定，可以围绕着这四个视图来组织，然后由一些用例(Use Cases)或场景(Scenarios)来说明，从而形成了第五个视图。</p><p>当采用面向对象的设计方法描述对象模型时，通常使用类图表达类的内部属性和行为，以及类集合之间的交互关系；采用状态图定义对象的内部行为。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284656",
                    "sort_son": "3",
                    "creater_name": "龚倩",
                    "create_time": "1602643179",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统分析与设计"
                    ],
                    "single_score": 0,
                    "index": 15,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284661",
                    "difficulty_id": "3",
                    "question_title": "<p>某公司销售数据库的商品、仓库关系模式及函数依赖集F1、F2如下：</p><p>商品（商品号，商品名称，生产商，单价），F1={商品号→商品名称，商品号→生产商，商品号→单价）}，商品关系的主键是 （19）。仓库（仓库号，地址，电话，商品号，库存量），F2={仓库号→（地址，电话），（仓库号，商品号）→库存量}。仓库关系的主键是（20），外键是（21）。</p><p>仓库关系模式（22），为了解决这一问题，需要将仓库关系分解为（23）。</p>",
                    "option": [
                        "商品号",
                        "商品号，商品名称",
                        "商品号，生产商",
                        "商品名称，生产商"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>从商品关系的函数依赖集F1可以导出商品号决定商品关系的全属性，所以商品号是商品关系的主键。</p><p>从仓库关系的函数依赖集F2可以导出（仓库号，商品号）决定仓库关系的全属性，所以仓库关系的主键是（仓库号，商品号）。又由于商品号是商品关系的主键，故商品号是仓库关系的外键。</p><p>仓库关系存在冗余、插入异常和删除异常，以及修改操作的不一致。例如，仓库号为“12”的商品有3种，其地址就要重复3次，如下表所示，故仓库关系存在冗余</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643239314838.jpg\" title=\"1602643239314838.jpg\" alt=\"1.jpg\"/></p><p>试题（23）正确的答案D。为了解决仓库关系模式存在的问题需要进行模式分解，其中，选项A分解存在的问题是仓库2不属于第三范式，因为存在非主属性对码的部分函数依赖，即仓库号→电话。选项B分解存在的问题是分解有损连接，即分解的新关系模式仓库1和仓库2无法恢复到原关系。选项C分解存在的问题与A类同，分析略。</p><p>选项D分解是即保持函数依赖，又无损连接，分解的结果如下：<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643408835354.jpg\" title=\"1602643408835354.jpg\" alt=\"1.jpg\"/></p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284660",
                    "sort_son": "1",
                    "creater_name": "试题账号",
                    "create_time": "1602643355",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "数据库基础"
                    ],
                    "single_score": 0,
                    "index": 16,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284662",
                    "difficulty_id": "3",
                    "question_title": "<p>某公司销售数据库的商品、仓库关系模式及函数依赖集F1、F2如下：</p><p>商品（商品号，商品名称，生产商，单价），F1={商品号→商品名称，商品号→生产商，商品号→单价）}，商品关系的主键是 （19）。仓库（仓库号，地址，电话，商品号，库存量），F2={仓库号→（地址，电话），（仓库号，商品号）→库存量}。仓库关系的主键是（20），外键是（21）。</p><p>仓库关系模式（22），为了解决这一问题，需要将仓库关系分解为（23）。</p>",
                    "option": [
                        "仓库号",
                        "仓库号，商品号",
                        "仓库号，电话",
                        "地址，电话"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>从商品关系的函数依赖集F1可以导出商品号决定商品关系的全属性，所以商品号是商品关系的主键。</p><p>从仓库关系的函数依赖集F2可以导出（仓库号，商品号）决定仓库关系的全属性，所以仓库关系的主键是（仓库号，商品号）。又由于商品号是商品关系的主键，故商品号是仓库关系的外键。</p><p>仓库关系存在冗余、插入异常和删除异常，以及修改操作的不一致。例如，仓库号为“12”的商品有3种，其地址就要重复3次，如下表所示，故仓库关系存在冗余</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643239314838.jpg\" title=\"1602643239314838.jpg\" alt=\"1.jpg\"/></p><p>试题（23）正确的答案D。为了解决仓库关系模式存在的问题需要进行模式分解，其中，选项A分解存在的问题是仓库2不属于第三范式，因为存在非主属性对码的部分函数依赖，即仓库号→电话。选项B分解存在的问题是分解有损连接，即分解的新关系模式仓库1和仓库2无法恢复到原关系。选项C分解存在的问题与A类同，分析略。</p><p>选项D分解是即保持函数依赖，又无损连接，分解的结果如下：<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643408835354.jpg\" title=\"1602643408835354.jpg\" alt=\"1.jpg\"/></p><p><br/></p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284660",
                    "sort_son": "2",
                    "creater_name": "试题账号",
                    "create_time": "1602643355",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "数据库基础"
                    ],
                    "single_score": 0,
                    "index": 17,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284663",
                    "difficulty_id": "3",
                    "question_title": "<p>某公司销售数据库的商品、仓库关系模式及函数依赖集F1、F2如下：</p><p>商品（商品号，商品名称，生产商，单价），F1={商品号→商品名称，商品号→生产商，商品号→单价）}，商品关系的主键是 （19）。仓库（仓库号，地址，电话，商品号，库存量），F2={仓库号→（地址，电话），（仓库号，商品号）→库存量}。仓库关系的主键是（20），外键是（21）。</p><p>仓库关系模式（22），为了解决这一问题，需要将仓库关系分解为（23）。</p>",
                    "option": [
                        "仓库号",
                        "地址",
                        "电话",
                        " 商品号 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>从商品关系的函数依赖集F1可以导出商品号决定商品关系的全属性，所以商品号是商品关系的主键。</p><p>从仓库关系的函数依赖集F2可以导出（仓库号，商品号）决定仓库关系的全属性，所以仓库关系的主键是（仓库号，商品号）。又由于商品号是商品关系的主键，故商品号是仓库关系的外键。</p><p>仓库关系存在冗余、插入异常和删除异常，以及修改操作的不一致。例如，仓库号为“12”的商品有3种，其地址就要重复3次，如下表所示，故仓库关系存在冗余</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643239314838.jpg\" title=\"1602643239314838.jpg\" alt=\"1.jpg\"/></p><p>试题（23）正确的答案D。为了解决仓库关系模式存在的问题需要进行模式分解，其中，选项A分解存在的问题是仓库2不属于第三范式，因为存在非主属性对码的部分函数依赖，即仓库号→电话。选项B分解存在的问题是分解有损连接，即分解的新关系模式仓库1和仓库2无法恢复到原关系。选项C分解存在的问题与A类同，分析略。</p><p>选项D分解是即保持函数依赖，又无损连接，分解的结果如下：<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643408835354.jpg\" title=\"1602643408835354.jpg\" alt=\"1.jpg\"/></p><p><br/></p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284660",
                    "sort_son": "3",
                    "creater_name": "试题账号",
                    "create_time": "1602643355",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "数据库基础"
                    ],
                    "single_score": 0,
                    "index": 18,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284664",
                    "difficulty_id": "3",
                    "question_title": "<p>某公司销售数据库的商品、仓库关系模式及函数依赖集F1、F2如下：</p><p>商品（商品号，商品名称，生产商，单价），F1={商品号→商品名称，商品号→生产商，商品号→单价）}，商品关系的主键是 （19）。仓库（仓库号，地址，电话，商品号，库存量），F2={仓库号→（地址，电话），（仓库号，商品号）→库存量}。仓库关系的主键是（20），外键是（21）。</p><p>仓库关系模式（22），为了解决这一问题，需要将仓库关系分解为（23）。</p>",
                    "option": [
                        "存在冗余、插入异常和删除异常，以及修改操作的不一致",
                        "不存在冗余，但存在插入异常和删除异常",
                        "不存在修改操作的不一致，但存在冗余和插入异常",
                        "不存在冗余、插入异常，但存在删除异常和修改操作的不一致"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>从商品关系的函数依赖集F1可以导出商品号决定商品关系的全属性，所以商品号是商品关系的主键。</p><p>从仓库关系的函数依赖集F2可以导出（仓库号，商品号）决定仓库关系的全属性，所以仓库关系的主键是（仓库号，商品号）。又由于商品号是商品关系的主键，故商品号是仓库关系的外键。</p><p>仓库关系存在冗余、插入异常和删除异常，以及修改操作的不一致。例如，仓库号为“12”的商品有3种，其地址就要重复3次，如下表所示，故仓库关系存在冗余</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643239314838.jpg\" title=\"1602643239314838.jpg\" alt=\"1.jpg\"/></p><p>试题（23）正确的答案D。为了解决仓库关系模式存在的问题需要进行模式分解，其中，选项A分解存在的问题是仓库2不属于第三范式，因为存在非主属性对码的部分函数依赖，即仓库号→电话。选项B分解存在的问题是分解有损连接，即分解的新关系模式仓库1和仓库2无法恢复到原关系。选项C分解存在的问题与A类同，分析略。</p><p>选项D分解是即保持函数依赖，又无损连接，分解的结果如下：<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643408835354.jpg\" title=\"1602643408835354.jpg\" alt=\"1.jpg\"/></p><p><br/></p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284660",
                    "sort_son": "4",
                    "creater_name": "试题账号",
                    "create_time": "1602643355",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "数据库基础"
                    ],
                    "single_score": 0,
                    "index": 19,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284665",
                    "difficulty_id": "3",
                    "question_title": "<p>某公司销售数据库的商品、仓库关系模式及函数依赖集F1、F2如下：</p><p>商品（商品号，商品名称，生产商，单价），F1={商品号→商品名称，商品号→生产商，商品号→单价）}，商品关系的主键是 （19）。仓库（仓库号，地址，电话，商品号，库存量），F2={仓库号→（地址，电话），（仓库号，商品号）→库存量}。仓库关系的主键是（20），外键是（21）。</p><p>仓库关系模式（22），为了解决这一问题，需要将仓库关系分解为（23）。</p>",
                    "option": [
                        "仓库1（仓库号，地址）和仓库2（仓库号，电话，商品号，库存量）",
                        "仓库1（仓库号，地址，电话）和仓库2（商品号，库存量）",
                        "仓库1（仓库号，电话）和仓库2（仓库号，地址，商品号，库存量）",
                        "仓库1（仓库号，地址，电话）和仓库2（仓库号，商品号，库存量）"
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>从商品关系的函数依赖集F1可以导出商品号决定商品关系的全属性，所以商品号是商品关系的主键。</p><p>从仓库关系的函数依赖集F2可以导出（仓库号，商品号）决定仓库关系的全属性，所以仓库关系的主键是（仓库号，商品号）。又由于商品号是商品关系的主键，故商品号是仓库关系的外键。</p><p>仓库关系存在冗余、插入异常和删除异常，以及修改操作的不一致。例如，仓库号为“12”的商品有3种，其地址就要重复3次，如下表所示，故仓库关系存在冗余</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643239314838.jpg\" title=\"1602643239314838.jpg\" alt=\"1.jpg\"/></p><p>试题（23）正确的答案D。为了解决仓库关系模式存在的问题需要进行模式分解，其中，选项A分解存在的问题是仓库2不属于第三范式，因为存在非主属性对码的部分函数依赖，即仓库号→电话。选项B分解存在的问题是分解有损连接，即分解的新关系模式仓库1和仓库2无法恢复到原关系。选项C分解存在的问题与A类同，分析略。</p><p>选项D分解是即保持函数依赖，又无损连接，分解的结果如下：<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643408835354.jpg\" title=\"1602643408835354.jpg\" alt=\"1.jpg\"/></p><p><br/></p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284660",
                    "sort_son": "5",
                    "creater_name": "试题账号",
                    "create_time": "1602643355",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "数据库基础"
                    ],
                    "single_score": 0,
                    "index": 20,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284667",
                    "difficulty_id": "3",
                    "question_title": "关系R、S如下图所示，关系代数表达式<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643467458443.jpg\" title=\"1602643467458443.jpg\" alt=\"1.jpg\"/>，对关系R、S进行自然连接后的属性列数和元组个数分别为（25）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643490587614.jpg\" title=\"1602643490587614.jpg\" alt=\"1.jpg\"/>",
                    "option": [
                        "<img style=\"max-width:100%;height:auto\" src=\"https://s2.51cto.com/images/20201014/1602643526416377.jpg\" title=\"1602643526416377.jpg\" alt=\"1.jpg\"/>",
                        "<img style=\"max-width:100%;height:auto\" src=\"https://s2.51cto.com/images/20201014/1602643529743137.jpg\" title=\"1602643529743137.jpg\" alt=\"2.jpg\"/>",
                        "<img style=\"max-width:100%;height:auto\" src=\"https://s2.51cto.com/images/20201014/1602643532500043.jpg\" title=\"1602643532500043.jpg\" alt=\"3.jpg\"/>",
                        "<img style=\"max-width:100%;height:auto\" src=\"https://s2.51cto.com/images/20201014/1602643535178457.jpg\" title=\"1602643535178457.jpg\" alt=\"4.jpg\"/>"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>R×S后的结果如表7.6所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643581514486.jpg\" title=\"1602643581514486.jpg\" alt=\"1.jpg\"/></p><p>π3,4,5(σ1＜6(R×S)=</p><p>3、4、5列对应的是R.C、S.A、S.B，其中第一列小于第6列的值(即1＜6)是第一、第三元组。故第24题的答案选B。</p><p>设A1，A2，...，An是R和S的公共属性，当且仅当R的元组r与S的元组s在1，A2，…，An上都一致时，元组s和r组合成为R和S自然连接的一个元组。</p><p>由此可得，R和S的公共属性为A、B、C，但R和S在属性A、B、C上的值不等，故自然连接后，属性列数为3，元组个数为0。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284666",
                    "sort_son": "1",
                    "creater_name": "试题账号",
                    "create_time": "1602643607",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "数据库基础"
                    ],
                    "single_score": 0,
                    "index": 21,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284668",
                    "difficulty_id": "3",
                    "question_title": "关系R、S如下图所示，关系代数表达式<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643467458443.jpg\" title=\"1602643467458443.jpg\" alt=\"1.jpg\"/>，对关系R、S进行自然连接后的属性列数和元组个数分别为（25）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643490587614.jpg\" title=\"1602643490587614.jpg\" alt=\"1.jpg\"/>",
                    "option": [
                        "3和0",
                        "3和2",
                        "6和0",
                        "6和2"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>R×S后的结果如表7.6所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643581514486.jpg\" title=\"1602643581514486.jpg\" alt=\"1.jpg\"/></p><p>π3,4,5(σ1＜6(R×S)=</p><p>3、4、5列对应的是R.C、S.A、S.B，其中第一列小于第6列的值(即1＜6)是第一、第三元组。故第24题的答案选B。</p><p>设A1，A2，...，An是R和S的公共属性，当且仅当R的元组r与S的元组s在1，A2，…，An上都一致时，元组s和r组合成为R和S自然连接的一个元组。</p><p>由此可得，R和S的公共属性为A、B、C，但R和S在属性A、B、C上的值不等，故自然连接后，属性列数为3，元组个数为0。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284666",
                    "sort_son": "2",
                    "creater_name": "试题账号",
                    "create_time": "1602643607",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "数据库基础"
                    ],
                    "single_score": 0,
                    "index": 22,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284670",
                    "difficulty_id": "3",
                    "question_title": "分布透明性指用户不必关心数据的逻辑分片，不必关心数据存储的物理位置分配细节，也不必关心局部场地上数据库的数据模型。（26）是分布透明性的最高层次。（27）指用户或应用程序应当了解分片情况，但不必了解片段的存储场地。（28）透明性是指用户或应用程序应当了解分片及各片断存储的场地，但不必了解局部场地上使用的是何种数据模型。",
                    "option": [
                        "分片透明性",
                        "逻辑透明性",
                        "位置透明性",
                        "全局透明性"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>分布透明性包括：分片透明性、位置透明性和局部数据模型透明性。</p><p>（1）分片透明性是分布透明性的最高层次。所谓分片透明性是指用户或应用程序只对全局关系进行操作而不必考虑数据的分片。当分片模式改变时，只要改变全局模式到分片模式的映像（映像 2），而不影响全局模式和应用程序。全局模式不变，应用程序不必改写，这就是分片透明性。</p><p>（2）位置透明性是分布透明性的下一层次。所谓位置透明性是指，用户或应用程序应当了解分片情况，但不必了解片段的存储场地。当存储场地改变时，只要改变分片模式到分配模式的映像（映像 3），而不影响应用程序。同时，若片段的重复副本数目改变了，那么数据的冗余也会改变，但用户不必关心如何保持各副本的一致性，这也提供了重复副本的透明性。</p><p>（3）局部数据模型（逻辑透明）透明性是指用户或应用程序应当了解分片及各片断存储的场地，但不必了解局部场地上使用的是何种数据模型。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284669",
                    "sort_son": "1",
                    "creater_name": "试题账号",
                    "create_time": "1602643723",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "数据库基础"
                    ],
                    "single_score": 0,
                    "index": 23,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284671",
                    "difficulty_id": "3",
                    "question_title": "分布透明性指用户不必关心数据的逻辑分片，不必关心数据存储的物理位置分配细节，也不必关心局部场地上数据库的数据模型。（26）是分布透明性的最高层次。（27）指用户或应用程序应当了解分片情况，但不必了解片段的存储场地。（28）透明性是指用户或应用程序应当了解分片及各片断存储的场地，但不必了解局部场地上使用的是何种数据模型。",
                    "option": [
                        "分片透明性",
                        "逻辑透明性",
                        "位置透明性",
                        "全局透明性"
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "分布透明性包括：分片透明性、位置透明性和局部数据模型透明性。<p>（1）分片透明性是分布透明性的最高层次。所谓分片透明性是指用户或应用程序只对全局关系进行操作而不必考虑数据的分片。当分片模式改变时，只要改变全局模式到分片模式的映像（映像 2），而不影响全局模式和应用程序。全局模式不变，应用程序不必改写，这就是分片透明性。</p><p>（2）位置透明性是分布透明性的下一层次。所谓位置透明性是指，用户或应用程序应当了解分片情况，但不必了解片段的存储场地。当存储场地改变时，只要改变分片模式到分配模式的映像（映像 3），而不影响应用程序。同时，若片段的重复副本数目改变了，那么数据的冗余也会改变，但用户不必关心如何保持各副本的一致性，这也提供了重复副本的透明性。</p><p>（3）局部数据模型（逻辑透明）透明性是指用户或应用程序应当了解分片及各片断存储的场地，但不必了解局部场地上使用的是何种数据模型。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284669",
                    "sort_son": "2",
                    "creater_name": "试题账号",
                    "create_time": "1602643723",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "数据库基础"
                    ],
                    "single_score": 0,
                    "index": 24,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284672",
                    "difficulty_id": "3",
                    "question_title": "分布透明性指用户不必关心数据的逻辑分片，不必关心数据存储的物理位置分配细节，也不必关心局部场地上数据库的数据模型。（26）是分布透明性的最高层次。（27）指用户或应用程序应当了解分片情况，但不必了解片段的存储场地。（28）透明性是指用户或应用程序应当了解分片及各片断存储的场地，但不必了解局部场地上使用的是何种数据模型。",
                    "option": [
                        "分片透明性",
                        "逻辑透明性",
                        "位置透明性",
                        "全局透明性"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>分布透明性包括：分片透明性、位置透明性和局部数据模型透明性。</p><p>（1）分片透明性是分布透明性的最高层次。所谓分片透明性是指用户或应用程序只对全局关系进行操作而不必考虑数据的分片。当分片模式改变时，只要改变全局模式到分片模式的映像（映像 2），而不影响全局模式和应用程序。全局模式不变，应用程序不必改写，这就是分片透明性。</p><p>（2）位置透明性是分布透明性的下一层次。所谓位置透明性是指，用户或应用程序应当了解分片情况，但不必了解片段的存储场地。当存储场地改变时，只要改变分片模式到分配模式的映像（映像 3），而不影响应用程序。同时，若片段的重复副本数目改变了，那么数据的冗余也会改变，但用户不必关心如何保持各副本的一致性，这也提供了重复副本的透明性。</p><p>（3）局部数据模型（逻辑透明）透明性是指用户或应用程序应当了解分片及各片断存储的场地，但不必了解局部场地上使用的是何种数据模型。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284669",
                    "sort_son": "3",
                    "creater_name": "试题账号",
                    "create_time": "1602643723",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "数据库基础"
                    ],
                    "single_score": 0,
                    "index": 25,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284674",
                    "difficulty_id": "3",
                    "question_title": "<p>某服务器软件系统对可用性(Availability)、性能(Performance)和可修改性(Modification)的要求较高，（29）设计策略能提高该系统的可用性，（30）设计策略能够提高该系统的性能，（31）设计策略能够提高该系统的可修改性。</p>",
                    "option": [
                        "Ping/Echo",
                        "限制访问",
                        "运行时注册",
                        "接口-实现分离"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "本题主要考查质量属性以及实现质量属性的一般策略，不同策略主要针对一个或多个软件质量属性，其中Ping/Echo主要提高系统的可用性；限制访问主要提高系统的安全性；运行时注册主要提高系统的可修改性；接口-实现分离主要提高系统的可修改性；主动冗余提高系统的可靠性；队列调度主要提高系统的性能；信息隐藏主要提高系统的可修改性；记录-回放主要提高系统的可测试性，等等。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284673",
                    "sort_son": "1",
                    "creater_name": "龚倩",
                    "create_time": "1602643776",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 26,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284675",
                    "difficulty_id": "3",
                    "question_title": "<p>某服务器软件系统对可用性(Availability)、性能(Performance)和可修改性(Modification)的要求较高，（29）设计策略能提高该系统的可用性，（30）设计策略能够提高该系统的性能，（31）设计策略能够提高该系统的可修改性。</p>",
                    "option": [
                        "分层结构",
                        "事务机制",
                        "主动冗余",
                        "队列调度"
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "本题主要考查质量属性以及实现质量属性的一般策略，不同策略主要针对一个或多个软件质量属性，其中Ping/Echo主要提高系统的可用性；限制访问主要提高系统的安全性；运行时注册主要提高系统的可修改性；接口-实现分离主要提高系统的可修改性；主动冗余提高系统的可靠性；队列调度主要提高系统的性能；信息隐藏主要提高系统的可修改性；记录-回放主要提高系统的可测试性，等等。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284673",
                    "sort_son": "2",
                    "creater_name": "龚倩",
                    "create_time": "1602643776",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 27,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284676",
                    "difficulty_id": "3",
                    "question_title": "<p>某服务器软件系统对可用性(Availability)、性能(Performance)和可修改性(Modification)的要求较高，（29）设计策略能提高该系统的可用性，（30）设计策略能够提高该系统的性能，（31）设计策略能够提高该系统的可修改性。</p>",
                    "option": [
                        "信息隐藏",
                        "记录/回放",
                        "任务模型",
                        "回滚"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "本题主要考查质量属性以及实现质量属性的一般策略，不同策略主要针对一个或多个软件质量属性，其中Ping/Echo主要提高系统的可用性；限制访问主要提高系统的安全性；运行时注册主要提高系统的可修改性；接口-实现分离主要提高系统的可修改性；主动冗余提高系统的可靠性；队列调度主要提高系统的性能；信息隐藏主要提高系统的可修改性；记录-回放主要提高系统的可测试性，等等。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284673",
                    "sort_son": "3",
                    "creater_name": "龚倩",
                    "create_time": "1602643776",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 28,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284678",
                    "difficulty_id": "3",
                    "question_title": "<p>软件架构评估中，评估人员主要关注系统的质量属性，并确定采用何种架构更为合适。在对某个应用软件进行评估 时，该应用软件采用的 Web 服务器所支持的并发连接数是整个系统性能的一个 （32） ；改变加密级别可能会对安全 性和操作性均产生重要影响，则加密级别是系统的一个 （33） 。</p>",
                    "option": [
                        "检查点",
                        "敏感点",
                        "权衡点",
                        "风险点"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "敏感点是一个或多个构件的特性，权衡 点是影响多个质量属性的特性，是多个质量属性的敏感点。根据题干描述，在对某个应用软件进行评估时，该应用软件采用的Web服务器所支持的并发连接数是整个系统性能的一个敏感点；改变加密级别可能会对安全性和操作性均产生重 要影响，则加密级别是系统的一个权衡点。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284677",
                    "sort_son": "1",
                    "creater_name": "龚倩",
                    "create_time": "1602643820",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 29,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284679",
                    "difficulty_id": "3",
                    "question_title": "<p>软件架构评估中，评估人员主要关注系统的质量属性，并确定采用何种架构更为合适。在对某个应用软件进行评估 时，该应用软件采用的 Web 服务器所支持的并发连接数是整个系统性能的一个 （32） ；改变加密级别可能会对安全 性和操作性均产生重要影响，则加密级别是系统的一个 （33） 。</p>",
                    "option": [
                        "检查点",
                        "敏感点",
                        "权衡点",
                        "风险点"
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "敏感点是一个或多个构件的特性，权衡 点是影响多个质量属性的特性，是多个质量属性的敏感点。根据题干描述，在对某个应用软件进行评估时，该应用软件采用的Web服务器所支持的并发连接数是整个系统性能的一个敏感点；改变加密级别可能会对安全性和操作性均产生重 要影响，则加密级别是系统的一个权衡点。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284677",
                    "sort_son": "2",
                    "creater_name": "龚倩",
                    "create_time": "1602643820",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 30,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284683",
                    "difficulty_id": "3",
                    "question_title": "<p>面向服务（Service-Oriented，SO）的开发方法将（36）的定义与实现进行解耦，并将跨构件的功能调用暴露出来。该方法有三个主要的抽象级别，最低层的（37）代表单个逻辑单元的事物，包含特定的结构化接口，并且返回结构化的响应；第二层的服务代表操作的逻辑分组；最高层的（38）则是为了实现特定业务目标而执行的一组长期运行的动作或者活动。</p>",
                    "option": [
                        "接口",
                        "功能",
                        "活动",
                        "用例"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>OO的应用构建在类和对象之上，随后发展起来的建模技术将相关对象按照业务功能进行分组，就形成了构件（Component）的概念。对于跨构件的功能调用，则采用接口的形式暴露出来。进一步将接口的定义与实现进行解耦，则催生了服务和面向服务（Service-Oriented，SO）的开发方法。由此可见，面向对象、基于构件、面向服务是三个递进的抽象层次。</p><p>SO方法有三个主要的抽象级别，分别是操作、服务和业务流程。位于最低层的操作代表单个逻辑单元的事物，执行操作通常会导致读、写或修改一个或多个持久性数据。服务的操作类似于对象的方法，它们都有特定的结构化接口，并且返回结构化的响应；位于第二层的服务代表操作的逻辑分组；最高层的业务流程则是为了实现特定业务目标而执行的一组长期运行的动作或活动，包括依据一组业务规则按照有序序列执行的一系列操作。其中操作的排序、选择和执行成为服务或流程的编排，典型的情况是调用已编排的服务来响应业务事件。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284682",
                    "sort_son": "1",
                    "creater_name": "龚倩",
                    "create_time": "1602644258",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 31,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284684",
                    "difficulty_id": "3",
                    "question_title": "<p>面向服务（Service-Oriented，SO）的开发方法将（36）的定义与实现进行解耦，并将跨构件的功能调用暴露出来。该方法有三个主要的抽象级别，最低层的（37）代表单个逻辑单元的事物，包含特定的结构化接口，并且返回结构化的响应；第二层的服务代表操作的逻辑分组；最高层的（38）则是为了实现特定业务目标而执行的一组长期运行的动作或者活动。</p>",
                    "option": [
                        "类",
                        "对象",
                        "操作",
                        "状态"
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>OO的应用构建在类和对象之上，随后发展起来的建模技术将相关对象按照业务功能进行分组，就形成了构件（Component）的概念。对于跨构件的功能调用，则采用接口的形式暴露出来。进一步将接口的定义与实现进行解耦，则催生了服务和面向服务（Service-Oriented，SO）的开发方法。由此可见，面向对象、基于构件、面向服务是三个递进的抽象层次。</p><p>SO方法有三个主要的抽象级别，分别是操作、服务和业务流程。位于最低层的操作代表单个逻辑单元的事物，执行操作通常会导致读、写或修改一个或多个持久性数据。服务的操作类似于对象的方法，它们都有特定的结构化接口，并且返回结构化的响应；位于第二层的服务代表操作的逻辑分组；最高层的业务流程则是为了实现特定业务目标而执行的一组长期运行的动作或活动，包括依据一组业务规则按照有序序列执行的一系列操作。其中操作的排序、选择和执行成为服务或流程的编排，典型的情况是调用已编排的服务来响应业务事件。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284682",
                    "sort_son": "2",
                    "creater_name": "龚倩",
                    "create_time": "1602644258",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 32,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284685",
                    "difficulty_id": "3",
                    "question_title": "<p>面向服务（Service-Oriented，SO）的开发方法将（36）的定义与实现进行解耦，并将跨构件的功能调用暴露出来。该方法有三个主要的抽象级别，最低层的（37）代表单个逻辑单元的事物，包含特定的结构化接口，并且返回结构化的响应；第二层的服务代表操作的逻辑分组；最高层的（38）则是为了实现特定业务目标而执行的一组长期运行的动作或者活动。</p>",
                    "option": [
                        "业务规则",
                        "业务流程",
                        "数据流",
                        "控制流"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>OO的应用构建在类和对象之上，随后发展起来的建模技术将相关对象按照业务功能进行分组，就形成了构件（Component）的概念。对于跨构件的功能调用，则采用接口的形式暴露出来。进一步将接口的定义与实现进行解耦，则催生了服务和面向服务（Service-Oriented，SO）的开发方法。由此可见，面向对象、基于构件、面向服务是三个递进的抽象层次。</p><p>SO方法有三个主要的抽象级别，分别是操作、服务和业务流程。位于最低层的操作代表单个逻辑单元的事物，执行操作通常会导致读、写或修改一个或多个持久性数据。服务的操作类似于对象的方法，它们都有特定的结构化接口，并且返回结构化的响应；位于第二层的服务代表操作的逻辑分组；最高层的业务流程则是为了实现特定业务目标而执行的一组长期运行的动作或活动，包括依据一组业务规则按照有序序列执行的一系列操作。其中操作的排序、选择和执行成为服务或流程的编排，典型的情况是调用已编排的服务来响应业务事件。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284682",
                    "sort_son": "3",
                    "creater_name": "龚倩",
                    "create_time": "1602644258",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 33,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284687",
                    "difficulty_id": "3",
                    "question_title": "<p>某软件公司欲开发一个Windows平台上的公告板系统。在明确用户需求后，该公司的架构师决定采用Command模式实现该系统的界面显示部分，并设计UML类图如下图所示。图中与Command模式中的“Invoker”角色相对应的类是（39），与“Concrete Command”角色相对应的类是（40）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644281756125.jpg\" title=\"1602644281756125.jpg\" alt=\"1.jpg\"/></p>",
                    "option": [
                        "Command",
                        "MenuItem",
                        "Open",
                        "BulktinBoardScreen"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>Command(命令)模式是设计模式中行为模式的一种，它将“请求”封装成对象，以便使用不同的请求、队列或者日志来参数化其他对象。Command模式也支持可撤销的操作。Command模式的类图如下所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644310541736.jpg\" title=\"1602644310541736.jpg\" alt=\"1.jpg\"/></p><p>对于题目所给出的图，与“Invoker”角色相对应的类是MenuItem，与“Concrete Command”角色相对应的类是Open。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284686",
                    "sort_son": "1",
                    "creater_name": "龚倩",
                    "create_time": "1602644330",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 34,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284688",
                    "difficulty_id": "3",
                    "question_title": "<p>某软件公司欲开发一个Windows平台上的公告板系统。在明确用户需求后，该公司的架构师决定采用Command模式实现该系统的界面显示部分，并设计UML类图如下图所示。图中与Command模式中的“Invoker”角色相对应的类是（39），与“Concrete Command”角色相对应的类是（40）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644281756125.jpg\" title=\"1602644281756125.jpg\" alt=\"1.jpg\"/></p>",
                    "option": [
                        "Command",
                        "MenuItem",
                        "Open",
                        "BulktinBoardScreen"
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>Command(命令)模式是设计模式中行为模式的一种，它将“请求”封装成对象，以便使用不同的请求、队列或者日志来参数化其他对象。Command模式也支持可撤销的操作。Command模式的类图如下所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644327567261.jpg\" title=\"1602644327567261.jpg\" alt=\"1.jpg\"/></p><p>对于题目所给出的图，与“Invoker”角色相对应的类是MenuItem，与“Concrete Command”角色相对应的类是Open。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284686",
                    "sort_son": "2",
                    "creater_name": "龚倩",
                    "create_time": "1602644330",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 35,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284690",
                    "difficulty_id": "3",
                    "question_title": "<p>如下图所示的UML类图描绘的是设计模式中的（41）模式。如第二个图所示的UML类图描述了该模式的一种应用，其中与第一个图中的“Abstraction”对应的类是（42）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644363183181.jpg\" title=\"1602644363183181.jpg\" alt=\"1.jpg\"/></p>",
                    "option": [
                        "Composite(组合)",
                        "Proxy(代理)",
                        "Bridge(桥接)",
                        "Command(命令)"
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>如图所示的UML类图描绘的是设计模式中的Bridge(桥接)模式，它将抽象部分与现实部分分离，使得它们两部分可以独立地变化。其中，类Abstraction是一个抽象类，用于定义抽象类的接口，维护一个AbstractionImpl(实现抽象类)的对象。在图所描述的应用中，与类Abstraction相对应的是类DataAccess。</p><p>Command(命令)模式的设计意图是，将一个请求封装为一个对象，从而使用户可用不同的请求对客户进行参数化，对请求排队或记录请求日志，以及支持可撤销的操作。</p><p>Composite(组合)模式的设计意图是，将对象组合成树型结构以表示“部分—整体”的层次结构。</p><p>Proxy(代理)模式的设计意图是，为其他对象提供一种代理以控制对这个对象的访问。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284689",
                    "sort_son": "1",
                    "creater_name": "龚倩",
                    "create_time": "1602644412",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 36,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284691",
                    "difficulty_id": "3",
                    "question_title": "<p>如下图所示的UML类图描绘的是设计模式中的（41）模式。如第二个图所示的UML类图描述了该模式的一种应用，其中与第一个图中的“Abstraction”对应的类是（42）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644363183181.jpg\" title=\"1602644363183181.jpg\" alt=\"1.jpg\"/></p>",
                    "option": [
                        "DataAccess",
                        "AccountDM",
                        "CustomerDM",
                        "DataAccessImp"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>如图所示的UML类图描绘的是设计模式中的Bridge(桥接)模式，它将抽象部分与现实部分分离，使得它们两部分可以独立地变化。其中，类Abstraction是一个抽象类，用于定义抽象类的接口，维护一个AbstractionImpl(实现抽象类)的对象。在图所描述的应用中，与类Abstraction相对应的是类DataAccess。</p><p>Command(命令)模式的设计意图是，将一个请求封装为一个对象，从而使用户可用不同的请求对客户进行参数化，对请求排队或记录请求日志，以及支持可撤销的操作。</p><p>Composite(组合)模式的设计意图是，将对象组合成树型结构以表示“部分—整体”的层次结构。</p><p>Proxy(代理)模式的设计意图是，为其他对象提供一种代理以控制对这个对象的访问。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284689",
                    "sort_son": "2",
                    "creater_name": "龚倩",
                    "create_time": "1602644412",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 37,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284695",
                    "difficulty_id": "3",
                    "question_title": "<p>某公司在对一家用车库门嵌入式软件系统进行架构设计时，识别出两个关键的质量属性场景，其中“当车库门正常下降时，如果发现下面有障碍物，则系统停止下降的时间需要控制在0.1秒内”与（45）质量属性相关；“系统需要为部署在远程PC机上的智能家居系统留有控制接口，并支持在智能家居系统中对该系统进行远程错误诊断与调试”与（46）质量属性相关。</p>",
                    "option": [
                        "可用性",
                        "性能",
                        "可修改性",
                        "可测试性"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "本题主要考查对质量属性的理解。题干中描述“当车库门正常下降时，如果发现下面有障碍物，则系统停止下降的时间需要控制在0.1秒内”这是对系统响应时间的要求，属于性能质量属性；“系统需要为部署在远程PC机上的智能家居系统留有控制接口，并支持在智能家居系统中对该系统进行远程错误诊断与调试”，这是对系统测试和调试方面的描述，属于系统的可测试性质量属性。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284694",
                    "sort_son": "1",
                    "creater_name": "龚倩",
                    "create_time": "1602644534",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 38,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284696",
                    "difficulty_id": "3",
                    "question_title": "<p>某公司在对一家用车库门嵌入式软件系统进行架构设计时，识别出两个关键的质量属性场景，其中“当车库门正常下降时，如果发现下面有障碍物，则系统停止下降的时间需要控制在0.1秒内”与（45）质量属性相关；“系统需要为部署在远程PC机上的智能家居系统留有控制接口，并支持在智能家居系统中对该系统进行远程错误诊断与调试”与（46）质量属性相关。</p>",
                    "option": [
                        "可用性",
                        "性能",
                        "可修改性",
                        "可测试性"
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "本题主要考查对质量属性的理解。题干中描述“当车库门正常下降时，如果发现下面有障碍物，则系统停止下降的时间需要控制在0.1秒内”这是对系统响应时间的要求，属于性能质量属性；“系统需要为部署在远程PC机上的智能家居系统留有控制接口，并支持在智能家居系统中对该系统进行远程错误诊断与调试”，这是对系统测试和调试方面的描述，属于系统的可测试性质量属性。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284694",
                    "sort_son": "2",
                    "creater_name": "龚倩",
                    "create_time": "1602644534",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 39,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284701",
                    "difficulty_id": "3",
                    "question_title": "<p>某软件项目的活动图如下所示。图中顶点表示项目里程碑，连接顶点的边表示包含的活动，则里程碑（50）在关键路径上，活动FG的松弛时间为（51）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644629974691.jpg\" title=\"1602644629974691.jpg\" alt=\"1.jpg\"/></p>",
                    "option": [
                        "B&nbsp;",
                        "C",
                        "D",
                        " I "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>关键路径是图中从起点到终点长度最长的那条路径，而关键路径的长度则是整个项目的工期。在本题中，路径START-D-F-H-FINISH的长度为48，是最长的一条路径，因此其是关键路径，因此D点是关键路径上的里程碑。</p><p>要求活动的松弛时间，就要求出活动的最早开始时间和最晚开始时间，其最晚开始时间减去最早开始时间，就是活动的松弛时间。对于活动FG，其最早开始时间是10+8=18，而最晚开始时间48-7-3=38，因此该活动的松弛时间是20。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284700",
                    "sort_son": "1",
                    "creater_name": "龚倩",
                    "create_time": "1602644667",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 40,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284702",
                    "difficulty_id": "3",
                    "question_title": "<p>某软件项目的活动图如下所示。图中顶点表示项目里程碑，连接顶点的边表示包含的活动，则里程碑（50）在关键路径上，活动FG的松弛时间为（51）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644629974691.jpg\" title=\"1602644629974691.jpg\" alt=\"1.jpg\"/></p>",
                    "option": [
                        "19",
                        "20",
                        "32",
                        "24"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>关键路径是图中从起点到终点长度最长的那条路径，而关键路径的长度则是整个项目的工期。在本题中，路径START-D-F-H-FINISH的长度为48，是最长的一条路径，因此其是关键路径，因此D点是关键路径上的里程碑。</p><p>要求活动的松弛时间，就要求出活动的最早开始时间和最晚开始时间，其最晚开始时间减去最早开始时间，就是活动的松弛时间。对于活动FG，其最早开始时间是10+8=18，而最晚开始时间48-7-3=38，因此该活动的松弛时间是20。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284700",
                    "sort_son": "2",
                    "creater_name": "龚倩",
                    "create_time": "1602644667",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 41,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284706",
                    "difficulty_id": "3",
                    "question_title": "<p>螺旋模型是一种演进式的软件过程模型， 结合了原型开发方法的系统性和瀑布模型可控性特点。它有两个显著特 点，一是采用（ ）的方式逐步加深系统定义和实现的深度，降低风险；二是确定一系列 （ ） ，确保项目开发过 程中的相关利益者都支持可行的和令人满意</p>",
                    "option": [
                        "逐步交付",
                        "顺序",
                        "循环",
                        "增量的系统解决方案"
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "螺旋模型是一种演进式的软件过程模型，结合了原型开发方法的瀑布模型的系统性和可控性特点。它有两个显著 特点，一是采用循环的方式逐步加深系统定义和实现的深度，同时降低风险；二是确定一系列里程碑，确保项目开发过 程中的相关利益者都支持可行的和令人满意的系统解决方案。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284705",
                    "sort_son": "1",
                    "creater_name": "wx5f1e961739eb1",
                    "create_time": "1602644782",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 42,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284707",
                    "difficulty_id": "3",
                    "question_title": "<p>螺旋模型是一种演进式的软件过程模型， 结合了原型开发方法的系统性和瀑布模型可控性特点。它有两个显著特 点，一是采用（ ）的方式逐步加深系统定义和实现的深度，降低风险；二是确定一系列 （ ） ，确保项目开发过 程中的相关利益者都支持可行的和令人满意</p>",
                    "option": [
                        "实现方案",
                        "设计方案",
                        "关键点",
                        "里程碑"
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "螺旋模型是一种演进式的软件过程模型，结合了原型开发方法的瀑布模型的系统性和可控性特点。它有两个显著 特点，一是采用循环的方式逐步加深系统定义和实现的深度，同时降低风险；二是确定一系列里程碑，确保项目开发过 程中的相关利益者都支持可行的和令人满意的系统解决方案。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284705",
                    "sort_son": "2",
                    "creater_name": "wx5f1e961739eb1",
                    "create_time": "1602644782",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 43,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284711",
                    "difficulty_id": "3",
                    "question_title": "<p>与SOA紧密相关的技术主要有UDDI、WSDL、SOAP和REST等，而这些技术都是以XML为基础而发展起来的。（58）提供了一种服务发布、查找和定位的方法，是服务的信息注册规范，以便被需要该服务的用户发现和使用它。（59）是对服务进行描述的语言，它有一套基于XML的语法定义，包含服务实现定义和服务接口定义。（60）定义了服务请求者和服务提供者之间的消息传输规范。通过它，应用程序可以在网络中进行数据交换和远程过程调用（Remote Procedure Call，RPC）。</p>",
                    "option": [
                        "UDDI",
                        "Rest",
                        "WSDL",
                        "SOAP"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "UDDI（Universal Description Discovery and Integration，统一描述、发现和集成）提供了一种服务发布、查找和定位的方法，是服务的信息注册规范，以便被需要该服务的用户发现和使用它。<p>WSDL（Web Service Description Language，Web服务描述语言）是对服务进行描述的语言，它有一套基于XML的语法定义。WSDL描述的重点是服务，它包含服务实现定义和服务接口定义。</p><p>SOAP（Simple Object Access Protocol，简单对象访问协议）定义了服务请求者和服务提供者之间的消息传输规范。SOAP用XML来格式化消息，用HTTP来承载消息。通过SOAP，应用程序可以在网络中进行数据交换和远程过程调用（Remote Procedure Call，RPC）</p><p>简单来说，WSDL用来描述服务，UDDI用来注册和查找服务，而SOAP作为传输层，用来在消费这和服务者之间传送消息，一个消费者可以在UDDI注册表查找服务，取得服务的WSDL描述，然后通过SOAP来调用该服务。</p><p>REST（Representational State Transfer，表述性状态转移）是一种只使用HTTP和XML进行基于Web通信的技术，可以降低开发的复杂性，提高系统的可伸缩性。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284710",
                    "sort_son": "1",
                    "creater_name": "龚倩",
                    "create_time": "1602644921",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 44,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284712",
                    "difficulty_id": "3",
                    "question_title": "<p>与SOA紧密相关的技术主要有UDDI、WSDL、SOAP和REST等，而这些技术都是以XML为基础而发展起来的。（58）提供了一种服务发布、查找和定位的方法，是服务的信息注册规范，以便被需要该服务的用户发现和使用它。（59）是对服务进行描述的语言，它有一套基于XML的语法定义，包含服务实现定义和服务接口定义。（60）定义了服务请求者和服务提供者之间的消息传输规范。通过它，应用程序可以在网络中进行数据交换和远程过程调用（Remote Procedure Call，RPC）。</p>",
                    "option": [
                        "UDDI",
                        "Rest",
                        "WSDL",
                        "SOAP"
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>UDDI（Universal Description Discovery and Integration，统一描述、发现和集成）提供了一种服务发布、查找和定位的方法，是服务的信息注册规范，以便被需要该服务的用户发现和使用它。</p><p>WSDL（Web Service Description Language，Web服务描述语言）是对服务进行描述的语言，它有一套基于XML的语法定义。WSDL描述的重点是服务，它包含服务实现定义和服务接口定义。</p><p>SOAP（Simple Object Access Protocol，简单对象访问协议）定义了服务请求者和服务提供者之间的消息传输规范。SOAP用XML来格式化消息，用HTTP来承载消息。通过SOAP，应用程序可以在网络中进行数据交换和远程过程调用（Remote Procedure Call，RPC）</p><p>简单来说，WSDL用来描述服务，UDDI用来注册和查找服务，而SOAP作为传输层，用来在消费这和服务者之间传送消息，一个消费者可以在UDDI注册表查找服务，取得服务的WSDL描述，然后通过SOAP来调用该服务。</p><p>REST（Representational State Transfer，表述性状态转移）是一种只使用HTTP和XML进行基于Web通信的技术，可以降低开发的复杂性，提高系统的可伸缩性。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284710",
                    "sort_son": "2",
                    "creater_name": "龚倩",
                    "create_time": "1602644922",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 45,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284713",
                    "difficulty_id": "3",
                    "question_title": "<p>与SOA紧密相关的技术主要有UDDI、WSDL、SOAP和REST等，而这些技术都是以XML为基础而发展起来的。（58）提供了一种服务发布、查找和定位的方法，是服务的信息注册规范，以便被需要该服务的用户发现和使用它。（59）是对服务进行描述的语言，它有一套基于XML的语法定义，包含服务实现定义和服务接口定义。（60）定义了服务请求者和服务提供者之间的消息传输规范。通过它，应用程序可以在网络中进行数据交换和远程过程调用（Remote Procedure Call，RPC）。</p>",
                    "option": [
                        "UDDI",
                        "Rest",
                        "WSDL",
                        "SOAP"
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>UDDI（Universal Description Discovery and Integration，统一描述、发现和集成）提供了一种服务发布、查找和定位的方法，是服务的信息注册规范，以便被需要该服务的用户发现和使用它。</p><p>WSDL（Web Service Description Language，Web服务描述语言）是对服务进行描述的语言，它有一套基于XML的语法定义。WSDL描述的重点是服务，它包含服务实现定义和服务接口定义。</p><p>SOAP（Simple Object Access Protocol，简单对象访问协议）定义了服务请求者和服务提供者之间的消息传输规范。SOAP用XML来格式化消息，用HTTP来承载消息。通过SOAP，应用程序可以在网络中进行数据交换和远程过程调用（Remote Procedure Call，RPC）</p><p>简单来说，WSDL用来描述服务，UDDI用来注册和查找服务，而SOAP作为传输层，用来在消费这和服务者之间传送消息，一个消费者可以在UDDI注册表查找服务，取得服务的WSDL描述，然后通过SOAP来调用该服务。</p><p>REST（Representational State Transfer，表述性状态转移）是一种只使用HTTP和XML进行基于Web通信的技术，可以降低开发的复杂性，提高系统的可伸缩性。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284710",
                    "sort_son": "3",
                    "creater_name": "龚倩",
                    "create_time": "1602644922",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 46,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284715",
                    "difficulty_id": "3",
                    "question_title": "<p>在软件设计中，（61）的主要任务是将系统的功能需求分配给软件模块，确定每个模块的功能和调用关系，形成形成软件（62）。而为每个具体任务选择适当的技术手段和处理方法的过程称为（63）。</p>",
                    "option": [
                        "详细设计",
                        "概要设计",
                        "架构设计",
                        "数据结构设计"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "系统设计的主要内容包括概要设计和详细设计。概要设计又称为系统总体结构设计，它是系统开发过程中很关键的一步，其主要任务是将系统的功能需求分配给软件模块，确定每个模块的功能和调用关系，形成软件的模块结构图，即系统结构图。在概要设计中，将系统开发的总任务分解成许多个基本的、具体的任务，为每个具体任务选择适当的技术手段和处理方法的过程称为详细设计。根据任务的不同，详细设计又可分为多种，例如，网络设计、代码设计、输入/输出设计、处理流程设计、数据存储设计、用户界面设计、安全性和可靠性设计等。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284714",
                    "sort_son": "1",
                    "creater_name": "龚倩",
                    "create_time": "1602644996",
                    "review_status": "2",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 47,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284716",
                    "difficulty_id": "3",
                    "question_title": "<p>在软件设计中，（61）的主要任务是将系统的功能需求分配给软件模块，确定每个模块的功能和调用关系，形成形成软件（62）。而为每个具体任务选择适当的技术手段和处理方法的过程称为（63）。</p>",
                    "option": [
                        "数据流图",
                        "4+1视图",
                        "IPO图",
                        "系统结构图"
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "系统设计的主要内容包括概要设计和详细设计。概要设计又称为系统总体结构设计，它是系统开发过程中很关键的一步，其主要任务是将系统的功能需求分配给软件模块，确定每个模块的功能和调用关系，形成软件的模块结构图，即系统结构图。在概要设计中，将系统开发的总任务分解成许多个基本的、具体的任务，为每个具体任务选择适当的技术手段和处理方法的过程称为详细设计。根据任务的不同，详细设计又可分为多种，例如，网络设计、代码设计、输入/输出设计、处理流程设计、数据存储设计、用户界面设计、安全性和可靠性设计等。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284714",
                    "sort_son": "2",
                    "creater_name": "龚倩",
                    "create_time": "1602644996",
                    "review_status": "2",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 48,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284717",
                    "difficulty_id": "3",
                    "question_title": "<p>在软件设计中，（61）的主要任务是将系统的功能需求分配给软件模块，确定每个模块的功能和调用关系，形成形成软件（62）。而为每个具体任务选择适当的技术手段和处理方法的过程称为（63）。</p>",
                    "option": [
                        "详细设计",
                        "概要设计",
                        "架构设计",
                        "数据结构设计"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "系统设计的主要内容包括概要设计和详细设计。概要设计又称为系统总体结构设计，它是系统开发过程中很关键的一步，其主要任务是将系统的功能需求分配给软件模块，确定每个模块的功能和调用关系，形成软件的模块结构图，即系统结构图。在概要设计中，将系统开发的总任务分解成许多个基本的、具体的任务，为每个具体任务选择适当的技术手段和处理方法的过程称为详细设计。根据任务的不同，详细设计又可分为多种，例如，网络设计、代码设计、输入/输出设计、处理流程设计、数据存储设计、用户界面设计、安全性和可靠性设计等。",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284714",
                    "sort_son": "3",
                    "creater_name": "龚倩",
                    "create_time": "1602644996",
                    "review_status": "2",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 49,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284719",
                    "difficulty_id": "3",
                    "question_title": "<p>一般来说，架构可以分为三个层次。（）层主要负责接收用户的请求，对用户的输入、输出进行检查与控制，处理客户端的一些动作，包括控制页面跳转等，并向用户呈现最终的结果信息。表现层主要采用（）结构来实现，其中的（）负责接收用户的请求，并决定应该调用哪个模型来处理。（）主要负责将业务数据存储在文件、数据库等持久化存储介质中。</p>",
                    "option": [
                        "表现层",
                        "业务逻辑层&nbsp;",
                        "持久层",
                        "中间层"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>一般来说，架构可以分为表现层、中间层和持久层三个层次。</p><p>(1)表现层。表现层主要负责接收用户的请求，对用户的输入、输出进行检查与控制，处理客户端的一些动作，包括控制页面跳转等，并向用户呈现最终的结果信息。表现层主要采用MVC结构来实现。控制器负责接收用户的请求，并决定应该调用哪个模型来处理；然后，模型根据用户请求调用中间层进行相应的业务逻辑处理，并返回数据；最后，控制器调用相应的视图来格式化模型返回的数据，并通过视图呈现给用户。</p><p>(2)中间层。中间层主要包括业务逻辑层组件、业务逻辑层工作流、业务逻辑层实体和业务逻辑层框架四个方面。业务逻辑层组件分为接口和实现类两个部分，接口用于定义业务逻辑组件，定义业务逻辑组件必须实现的方法。通常按模块来设计业务逻辑组件，每个模块设计为一个业务逻辑组件，并且每个业务逻辑组件以多个DAO组件作为基础，从而实现对外提供系统的业务逻辑服务。业务逻辑层工作流能够实现在多个参与者之间按照某种预定义的规则传递文档、信息或任务的过程自动进行，从而实现某个预期的业务目标，或者促进此目标的实现。业务逻辑层实体提供对业务数据及相关功能的状态编程访问，业务逻辑层实体数据可以使用具有复杂架构的数据来构建，这种数据通常来自数据库中的多个相关表。业务逻辑层实体数据可以作为业务过程的部分I/O参数传递，业务逻辑层的实体是可序列化的，以保持它们的当前状态。业务逻辑层是实现系统功能的核心组件，采用容器的形式，便于系统功能的开发、代码重用和管理。</p><p>(3)持久层。持久层主要负责数据的持久化存储，主要负责将业务数据存储在文件、数据库等持久化存储介质中。持久层的主要功能是为业务逻辑提供透明的数据访问、持久化、加载等能力。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284718",
                    "sort_son": "1",
                    "creater_name": "龚倩",
                    "create_time": "1602645073",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 50,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284720",
                    "difficulty_id": "3",
                    "question_title": "<p>一般来说，架构可以分为三个层次。（）层主要负责接收用户的请求，对用户的输入、输出进行检查与控制，处理客户端的一些动作，包括控制页面跳转等，并向用户呈现最终的结果信息。表现层主要采用（）结构来实现，其中的（）负责接收用户的请求，并决定应该调用哪个模型来处理。（）主要负责将业务数据存储在文件、数据库等持久化存储介质中。</p>",
                    "option": [
                        "MVC",
                        "spring",
                        "AOP&nbsp;",
                        "Hibernate"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>一般来说，架构可以分为表现层、中间层和持久层三个层次。</p><p>(1)表现层。表现层主要负责接收用户的请求，对用户的输入、输出进行检查与控制，处理客户端的一些动作，包括控制页面跳转等，并向用户呈现最终的结果信息。表现层主要采用MVC结构来实现。控制器负责接收用户的请求，并决定应该调用哪个模型来处理；然后，模型根据用户请求调用中间层进行相应的业务逻辑处理，并返回数据；最后，控制器调用相应的视图来格式化模型返回的数据，并通过视图呈现给用户。</p><p>(2)中间层。中间层主要包括业务逻辑层组件、业务逻辑层工作流、业务逻辑层实体和业务逻辑层框架四个方面。业务逻辑层组件分为接口和实现类两个部分，接口用于定义业务逻辑组件，定义业务逻辑组件必须实现的方法。通常按模块来设计业务逻辑组件，每个模块设计为一个业务逻辑组件，并且每个业务逻辑组件以多个DAO组件作为基础，从而实现对外提供系统的业务逻辑服务。业务逻辑层工作流能够实现在多个参与者之间按照某种预定义的规则传递文档、信息或任务的过程自动进行，从而实现某个预期的业务目标，或者促进此目标的实现。业务逻辑层实体提供对业务数据及相关功能的状态编程访问，业务逻辑层实体数据可以使用具有复杂架构的数据来构建，这种数据通常来自数据库中的多个相关表。业务逻辑层实体数据可以作为业务过程的部分I/O参数传递，业务逻辑层的实体是可序列化的，以保持它们的当前状态。业务逻辑层是实现系统功能的核心组件，采用容器的形式，便于系统功能的开发、代码重用和管理。</p><p>(3)持久层。持久层主要负责数据的持久化存储，主要负责将业务数据存储在文件、数据库等持久化存储介质中。持久层的主要功能是为业务逻辑提供透明的数据访问、持久化、加载等能力。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284718",
                    "sort_son": "2",
                    "creater_name": "龚倩",
                    "create_time": "1602645073",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 51,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284721",
                    "difficulty_id": "3",
                    "question_title": "<p>一般来说，架构可以分为三个层次。（）层主要负责接收用户的请求，对用户的输入、输出进行检查与控制，处理客户端的一些动作，包括控制页面跳转等，并向用户呈现最终的结果信息。表现层主要采用（）结构来实现，其中的（）负责接收用户的请求，并决定应该调用哪个模型来处理。（）主要负责将业务数据存储在文件、数据库等持久化存储介质中。</p>",
                    "option": [
                        "模型",
                        "控制器",
                        "视图",
                        "处理器"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>一般来说，架构可以分为表现层、中间层和持久层三个层次。</p><p>(1)表现层。表现层主要负责接收用户的请求，对用户的输入、输出进行检查与控制，处理客户端的一些动作，包括控制页面跳转等，并向用户呈现最终的结果信息。表现层主要采用MVC结构来实现。控制器负责接收用户的请求，并决定应该调用哪个模型来处理；然后，模型根据用户请求调用中间层进行相应的业务逻辑处理，并返回数据；最后，控制器调用相应的视图来格式化模型返回的数据，并通过视图呈现给用户。</p><p>(2)中间层。中间层主要包括业务逻辑层组件、业务逻辑层工作流、业务逻辑层实体和业务逻辑层框架四个方面。业务逻辑层组件分为接口和实现类两个部分，接口用于定义业务逻辑组件，定义业务逻辑组件必须实现的方法。通常按模块来设计业务逻辑组件，每个模块设计为一个业务逻辑组件，并且每个业务逻辑组件以多个DAO组件作为基础，从而实现对外提供系统的业务逻辑服务。业务逻辑层工作流能够实现在多个参与者之间按照某种预定义的规则传递文档、信息或任务的过程自动进行，从而实现某个预期的业务目标，或者促进此目标的实现。业务逻辑层实体提供对业务数据及相关功能的状态编程访问，业务逻辑层实体数据可以使用具有复杂架构的数据来构建，这种数据通常来自数据库中的多个相关表。业务逻辑层实体数据可以作为业务过程的部分I/O参数传递，业务逻辑层的实体是可序列化的，以保持它们的当前状态。业务逻辑层是实现系统功能的核心组件，采用容器的形式，便于系统功能的开发、代码重用和管理。</p><p>(3)持久层。持久层主要负责数据的持久化存储，主要负责将业务数据存储在文件、数据库等持久化存储介质中。持久层的主要功能是为业务逻辑提供透明的数据访问、持久化、加载等能力。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284718",
                    "sort_son": "3",
                    "creater_name": "龚倩",
                    "create_time": "1602645073",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 52,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284722",
                    "difficulty_id": "3",
                    "question_title": "<p>一般来说，架构可以分为三个层次。（）层主要负责接收用户的请求，对用户的输入、输出进行检查与控制，处理客户端的一些动作，包括控制页面跳转等，并向用户呈现最终的结果信息。表现层主要采用（）结构来实现，其中的（）负责接收用户的请求，并决定应该调用哪个模型来处理。（）主要负责将业务数据存储在文件、数据库等持久化存储介质中。</p>",
                    "option": [
                        "表现层",
                        "业务逻辑层",
                        "持久层",
                        "中间层"
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>一般来说，架构可以分为表现层、中间层和持久层三个层次。</p><p>(1)表现层。表现层主要负责接收用户的请求，对用户的输入、输出进行检查与控制，处理客户端的一些动作，包括控制页面跳转等，并向用户呈现最终的结果信息。表现层主要采用MVC结构来实现。控制器负责接收用户的请求，并决定应该调用哪个模型来处理；然后，模型根据用户请求调用中间层进行相应的业务逻辑处理，并返回数据；最后，控制器调用相应的视图来格式化模型返回的数据，并通过视图呈现给用户。</p><p>(2)中间层。中间层主要包括业务逻辑层组件、业务逻辑层工作流、业务逻辑层实体和业务逻辑层框架四个方面。业务逻辑层组件分为接口和实现类两个部分，接口用于定义业务逻辑组件，定义业务逻辑组件必须实现的方法。通常按模块来设计业务逻辑组件，每个模块设计为一个业务逻辑组件，并且每个业务逻辑组件以多个DAO组件作为基础，从而实现对外提供系统的业务逻辑服务。业务逻辑层工作流能够实现在多个参与者之间按照某种预定义的规则传递文档、信息或任务的过程自动进行，从而实现某个预期的业务目标，或者促进此目标的实现。业务逻辑层实体提供对业务数据及相关功能的状态编程访问，业务逻辑层实体数据可以使用具有复杂架构的数据来构建，这种数据通常来自数据库中的多个相关表。业务逻辑层实体数据可以作为业务过程的部分I/O参数传递，业务逻辑层的实体是可序列化的，以保持它们的当前状态。业务逻辑层是实现系统功能的核心组件，采用容器的形式，便于系统功能的开发、代码重用和管理。</p><p>(3)持久层。持久层主要负责数据的持久化存储，主要负责将业务数据存储在文件、数据库等持久化存储介质中。持久层的主要功能是为业务逻辑提供透明的数据访问、持久化、加载等能力。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284718",
                    "sort_son": "4",
                    "creater_name": "龚倩",
                    "create_time": "1602645073",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 53,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284725",
                    "difficulty_id": "3",
                    "question_title": "某工厂生产甲、乙两种产品，生产1公斤甲产品需要煤9公斤、电4度、油3公斤，生产1公斤乙产品需要煤4公斤、电5度、油10公斤。该工厂现有煤360公斤、电200度、油300公斤。已知甲产品每公斤利润为7千元，乙产品每公斤利润为1.2万元，为了获取最大利润应该生产甲产品 （69） 公斤，乙产品 （70） 公斤。",
                    "option": [
                        "20",
                        "21",
                        "22",
                        "23"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>设x1为甲产品生产量，x2为乙产品生产量。对该问题求解最优方案可以由下列数学模型描述：</p><p>max z=7x1+12x2</p><p>9x1+4x2≤360</p><p>4x1+5x2≤200</p><p>3x1+10x2≤300</p><p>x1≥0，x2≥0</p><p>求解得x1=20，x2=24。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284724",
                    "sort_son": "1",
                    "creater_name": "试题账号",
                    "create_time": "1602645208",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "应用数学\t"
                    ],
                    "single_score": 0,
                    "index": 54,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284726",
                    "difficulty_id": "3",
                    "question_title": "某工厂生产甲、乙两种产品，生产1公斤甲产品需要煤9公斤、电4度、油3公斤，生产1公斤乙产品需要煤4公斤、电5度、油10公斤。该工厂现有煤360公斤、电200度、油300公斤。已知甲产品每公斤利润为7千元，乙产品每公斤利润为1.2万元，为了获取最大利润应该生产甲产品 （69） 公斤，乙产品 （70） 公斤。",
                    "option": [
                        "22",
                        "23",
                        "24",
                        "25"
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>设x1为甲产品生产量，x2为乙产品生产量。对该问题求解最优方案可以由下列数学模型描述：</p><p>max z=7x1+12x2</p><p>9x1+4x2≤360</p><p>4x1+5x2≤200</p><p>3x1+10x2≤300</p><p>x1≥0，x2≥0</p><p>求解得x1=20，x2=24。</p>",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284724",
                    "sort_son": "2",
                    "creater_name": "试题账号",
                    "create_time": "1602645208",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "应用数学\t"
                    ],
                    "single_score": 0,
                    "index": 55,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284728",
                    "difficulty_id": "3",
                    "question_title": "<p>Many of the activities performed during the preliminary investigation are still being conducted in（71）, but in much greater depth than before. During this phase, the analyst must become &nbsp;fully aware of the（72） and must develop enough knowledge about the（73） and the existing systems to enable an effective solution to be proposed and implemented. Besides the（74） for process and data of current system, the deliverable from this phase also includes the（75） for the proposed system.</p>",
                    "option": [
                        "analysis phase",
                        "design phase",
                        "implementation phase",
                        "maintenance phase"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "略",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284727",
                    "sort_son": "1",
                    "creater_name": "wx5f1e961739eb1",
                    "create_time": "1602645299",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "专业英语"
                    ],
                    "single_score": 0,
                    "index": 56,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284729",
                    "difficulty_id": "3",
                    "question_title": "<p>Many of the activities performed during the preliminary investigation are still being conducted in（71）, but in much greater depth than before. During this phase, the analyst must become &nbsp;fully aware of the（72） and must develop enough knowledge about the（73） and the existing systems to enable an effective solution to be proposed and implemented. Besides the（74） for process and data of current system, the deliverable from this phase also includes the（75） for the proposed system.</p>",
                    "option": [
                        "main symptom",
                        "root problem",
                        "final blueprint",
                        "data specification"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "略",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284727",
                    "sort_son": "2",
                    "creater_name": "wx5f1e961739eb1",
                    "create_time": "1602645299",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "专业英语"
                    ],
                    "single_score": 0,
                    "index": 57,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284730",
                    "difficulty_id": "3",
                    "question_title": "<p>Many of the activities performed during the preliminary investigation are still being conducted in（71）, but in much greater depth than before. During this phase, the analyst must become &nbsp;fully aware of the（72） and must develop enough knowledge about the（73） and the existing systems to enable an effective solution to be proposed and implemented. Besides the（74） for process and data of current system, the deliverable from this phase also includes the（75） for the proposed system.</p>",
                    "option": [
                        "hardware environment",
                        "testing environment",
                        "software environment",
                        "business environment"
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "略",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284727",
                    "sort_son": "3",
                    "creater_name": "wx5f1e961739eb1",
                    "create_time": "1602645299",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "专业英语"
                    ],
                    "single_score": 0,
                    "index": 58,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284731",
                    "difficulty_id": "3",
                    "question_title": "<p>Many of the activities performed during the preliminary investigation are still being conducted in（71）, but in much greater depth than before. During this phase, the analyst must become &nbsp;fully aware of the（72） and must develop enough knowledge about the（73） and the existing systems to enable an effective solution to be proposed and implemented. Besides the（74） for process and data of current system, the deliverable from this phase also includes the（75） for the proposed system.</p>",
                    "option": [
                        "logical models",
                        "physical models",
                        "design models",
                        "implementation models"
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "略",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284727",
                    "sort_son": "4",
                    "creater_name": "wx5f1e961739eb1",
                    "create_time": "1602645299",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "专业英语"
                    ],
                    "single_score": 0,
                    "index": 59,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "1",
                    "correlation_time": "0",
                    "question_id": "284732",
                    "difficulty_id": "3",
                    "question_title": "<p>Many of the activities performed during the preliminary investigation are still being conducted in（71）, but in much greater depth than before. During this phase, the analyst must become &nbsp;fully aware of the（72） and must develop enough knowledge about the（73） and the existing systems to enable an effective solution to be proposed and implemented. Besides the（74） for process and data of current system, the deliverable from this phase also includes the（75） for the proposed system.</p>",
                    "option": [
                        "hardware and software specification",
                        "system performance specification",
                        "formal requirements definition",
                        "general problem statement"
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "略",
                    "question_type": "9",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284727",
                    "sort_son": "5",
                    "creater_name": "wx5f1e961739eb1",
                    "create_time": "1602645299",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "完形类单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "专业英语"
                    ],
                    "single_score": 0,
                    "index": 60,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 1
                },
                {
                    "every_score": "1",
                    "rank": "2",
                    "correlation_time": "1602642947",
                    "question_id": "284649",
                    "difficulty_id": "3",
                    "question_title": "<p>设某进程的段表如下所示，逻辑地址 （ ） 可以转换为对应的物理地址。<br/></p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210416/1618543395921399.png\" title=\"1618543395921399.png\" alt=\"29253.png\"/></p>",
                    "option": [
                        " (0, 1597)、(1, 30)和(3, 1390) ",
                        " (0, 128)、(1, 30)和(3, 1390) ",
                        " (0, 1597)、(2, 98)和(3, 1390) ",
                        " (0, 128)、(2, 98)和(4, 1066) "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>0段的段长只有600，而逻辑地址(0, 1597)中的1597己经越界，不能转换成逻辑地址，选项A和选项C中都包含逻辑地址(0, 1597)所以是错误的。<br/>4段的段长只有960，而逻辑地址(4, 1066)中的1066己经越界，也不能转换成逻辑地址，选项D中包含逻辑地址(4, 1066)所以是错误的。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284649",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602642947",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "操作系统\t"
                    ],
                    "single_score": 0,
                    "index": 61,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "3",
                    "correlation_time": "1602642975",
                    "question_id": "284650",
                    "difficulty_id": "3",
                    "question_title": "<p>某文件系统采用链式存储管理方式并应用记录的成组与分解技术，且磁盘块的大小为 4096 字节。若文件 license.doc 由 7 个逻辑记录组成，每个逻辑记录的大小为 2048字节，并依次存放在 58、89、96 和 101 号磁盘块 上，那么要存取文件的第 12288 逻辑字节处的信息，应访问 （11） 号磁盘块。</p>",
                    "option": [
                        " 58 ",
                        " 89 ",
                        " 96 ",
                        " 101 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>逻辑字节也称为相对字节，是从0开始计算的，而12288/4096+1=4,所以第12288逻辑字节处的信息，应访问101应号磁盘块。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284650",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602642975",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "操作系统\t"
                    ],
                    "single_score": 0,
                    "index": 62,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "4",
                    "correlation_time": "1602643117",
                    "question_id": "284655",
                    "difficulty_id": "3",
                    "question_title": "王某买了一幅美术作品原件，则他享有该美术作品的（15）。",
                    "option": [
                        "著作权",
                        "所有权",
                        "展览权",
                        "所有权与其展览权"
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "显然，作品的买卖导致了所有权的转移，著作权法第十八条规定：“美术等作品原件所有权的转移，不视为作品著作权的转移，但美术作品原件的展览权由原件所有人享有。”因此，作品交易后，著作权仍归原作者，王某享有购买的美术作品的所有权和其展览权。",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284655",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602643117",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "法律法规"
                    ],
                    "single_score": 0,
                    "index": 63,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "5",
                    "correlation_time": "1602643856",
                    "question_id": "284680",
                    "difficulty_id": "3",
                    "question_title": "<p>（34）是互联网时代信息基础设施与应用服务模式的重要形态，是新一代信息技术集约化发展的必然趋势。它以资源聚合和虚拟化、应用服务和专业化、按需供给和灵便使用的服务模式，提供高效能、低成本、低功耗的计算与数据服务，支撑各类信息化的应用。</p>",
                    "option": [
                        " 物联网 ",
                        " 云计算 ",
                        " 智慧城市 ",
                        " 商业智能 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>云计算是互联网时代信息基础设施与应用服务模式的重要形态，是新一代信息技术集约化发展的必然趋势。它以资源聚合和虚拟化、应用服务和专业化、按需供给和灵便使用的服务模式，提供高效能、低成本、低功耗的计算与数据服务，支撑各类信息化的应用。</p><p>云计算具有重要特征：资源、平台和应用专业服务，使用户摆脱对具体设备的依赖，专注于创造和体验业务价值；资源聚集与集中管理，实现规模效应与可控质量保障；按需扩展与弹性租赁，降低信息化成本等特征。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284680",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602643856",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 64,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "6",
                    "correlation_time": "1602644084",
                    "question_id": "284681",
                    "difficulty_id": "3",
                    "question_title": "<p>CRM是一个集成化的信息管理系统，以下不属于CRM系统具备的主要功能的是（35）。</p>",
                    "option": [
                        " 能用于识别和规划企业资源，对采购、生产、成本、库存、销售、运输、财务和人力资源等进行规划和优化 ",
                        " 具有整合各种客户联系渠道的能力，并把客户数据分为描述性、促销性和交易性数据三大类 ",
                        " 系统必须实现基本的数据挖掘模块，能对客户信息进行全方位的统一管理 ",
                        " 能够提供销售、客户服务和营销三个业务的自动化工具，并具有可扩展性和可复用性 "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>选项B、选项C和选项D都是CRM系统应具备的主要功能。选项A是企业资源计划(ERP)的主要功能之一。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284681",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602644084",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 65,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "7",
                    "correlation_time": "1602644453",
                    "question_id": "284692",
                    "difficulty_id": "3",
                    "question_title": "<p>某面向对象系统中的文本显示类(TextView)和图片显示类(PictureView)都继承了组件类(Component)，分别显示文本和图片内容，现需要构造带有滚动条、带有黑色边框或者既有滚动条又有黑色边框的文本显示控件和图片显示控件，但希望最多只增加3个类，_____设计模式可以实现该目的。</p>",
                    "option": [
                        " 外观(Facade) ",
                        " 装饰(Decorate) ",
                        " 单例(Singleton) ",
                        " 模板方法(Template Method) "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>外观(Facade)模式的设计意图是：为子系统中的一组功能调用提供一个一致的接口，这个接口使得这一子系统更加容易使用。</p><p>装饰(Decorate)模式的设计意图是：当不能采用生成子类的方法进行扩充时，动态地给一个对象添加一些额外的功能。</p><p>单例(Singleton)模式的设计意图是：保证一个类仅有一个实例，并提供一个访问它的全局访问点。</p><p>模板方法(Template Method)模式的设计意图是：在方法中定义算法的框架，而将算法中的一些操作步骤延迟到子类中实现。</p><p>本试题所给出的场景限定了能够增加的类的数量。可以通过新增加三个类，分别继承组件类并实现给组件增加黑色边框、滚动条以及增加黑色边框和滚动条功能，由于文本显示类和图片显示类都属于组件类，因此新增加的三个类能够给文本显示对象和图片显示对象增加额外的显示功能，该实现手段采用的就是装饰(Decorate)模式。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284692",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602644453",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        " 系统设计与架构"
                    ],
                    "single_score": 0,
                    "index": 66,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "8",
                    "correlation_time": "1602644495",
                    "question_id": "284693",
                    "difficulty_id": "3",
                    "question_title": "<p>特定领域软件架构(DSSA.是一个特定的问题领域中由领域模型、参考需求和参考架构等组成的开发基础架构。以下关于DSSA所具备的特征描述中，错误的是_____。</p>",
                    "option": [
                        " 对整个领域能有合适程度的抽象 ",
                        " 具备该领域固定的、典型的在开发过程中的可重用元素 ",
                        " 一个严格定义的问题域或解决域 ",
                        " 具有易用性，使其可以用于领域中某个特定应用的开发 "
                    ],
                    "answer": [
                        "D"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>特定领域软件架构(DSSA)是一个特定的问题领域中由领域模型、参考需求和参考架构等组成的开发基础架构，其目标就是支持一个特定领域中多个应用的生成。通常情况下，DSSA应该具备以下4个方面的特征：①一个严格定义的问题域或解决域；②具有普遍性，使其可以用于领域中某个特定应用的开发；③对整个领域能有合适程度的抽象；④具备该领域固定的典型的在开发过程中的可重用元素。据此，选项D的说法有误。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284693",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602644495",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 67,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "9",
                    "correlation_time": "1602644560",
                    "question_id": "284697",
                    "difficulty_id": "3",
                    "question_title": "<p>某公司欲实现一个数据处理软件，该软件需要从网络接收一组复杂的数据，然后分步进行解析和处理。在这种情况下，采用（47）的体系结构风格比较适合。</p>",
                    "option": [
                        " 远程过程调用 ",
                        " 层次化 ",
                        " 管道/过滤器 ",
                        " 共享数据 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>当一个软件需要处理复杂数据,且数据需要通过分步进行处理,具有明显的阶段特性时,采用管道和过滤器模式是比较好的方式,因此本题应该选择C。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284697",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602644560",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 68,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "10",
                    "correlation_time": "1602644591",
                    "question_id": "284698",
                    "difficulty_id": "3",
                    "question_title": "<p>用户界面设计的“黄金规则”不包含_____。</p>",
                    "option": [
                        " 为用户提供更多的信息和功能 ",
                        " 减少用户的记忆负担 ",
                        " 保持界面一致性 ",
                        " 置用户于控制之下 "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>Theo MandeI在关于界而设计的著作中，提出了3条“黄金规则”，即①置用户于控制之下；②减少用户的记忆负担；③保持界面一致性。这些黄金规则实际上形成了用于指导人机界面设计活动的一组设计原则的基础。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284698",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602644591",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统分析与设计"
                    ],
                    "single_score": 0,
                    "index": 69,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "11",
                    "correlation_time": "1602644610",
                    "question_id": "284699",
                    "difficulty_id": "3",
                    "question_title": "<p>人们根据软件维护的性质不同，将软件维护分为更正性维护、适应性维护、完善性维护、预防性维护等四类， （49） 是这四类软件维护的共同特征。</p>",
                    "option": [
                        " 发现原产品中存在问题后采取的补救措施 ",
                        " 交付软件产品后进行的修改 ",
                        " 测试发现问题之后的应对措施 ",
                        " 软件产品交付前进行的质量管理活动 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>这四类软件维护的共同特征为都是交付后进行的。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284699",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602644610",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 70,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "12",
                    "correlation_time": "1602644709",
                    "question_id": "284703",
                    "difficulty_id": "3",
                    "question_title": "<p>三个可靠度R均为0.8的部件串联构成一个系统，如下图所示：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644692742661.jpg\" title=\"1602644692742661.jpg\" alt=\"1.jpg\"/></p><p>则该系统的可靠度为（52）。</p>",
                    "option": [
                        " 0.240 ",
                        " 0.512 ",
                        " 0.800 ",
                        " 0.992 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>本题中由三个部件串联构成系统，三个部件中任何一个部件失效就足以使系统失效。串联系统的可靠度RS=R×R×R=0.8×0.8×0.8=0.512。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284703",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602644709",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统安全与可靠性设计"
                    ],
                    "single_score": 0,
                    "index": 71,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "13",
                    "correlation_time": "1602644739",
                    "question_id": "284704",
                    "difficulty_id": "3",
                    "question_title": "<p>下列关于软件可靠性的叙述，不正确的是（53）。</p>",
                    "option": [
                        " 由于影响软件可靠性的因素很复杂，软件可靠性不能通过历史数据和开发数据直接测量和估算出来 ",
                        " 软件可靠性是指在特定环境和特定时间内，计算机程序无故障运行的概率 ",
                        " 在软件可靠性的讨论中，故障指软件行为与需求的不符，故障有等级之分 ",
                        " 排除一个故障可能会引入其他的错误，而这些错误会导致其他的故障 "
                    ],
                    "answer": [
                        "A"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>软件可靠性是软件系统在规定的时间内及规定的环境条件下，完成规定功能的能力，也就是软件无故障运行的概率。这里的故障是软件行为与需求的不符，故障有等级之分。软件可靠性可以通过历史数据和开发数据直接测量和估算出来。在软件开发中，排除一个故障可能会引入其他的错误，而这些错误会导致其他的故障，因此，在修改错误以后，还需要进行回归测试。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284704",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602644739",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统安全与可靠性设计"
                    ],
                    "single_score": 0,
                    "index": 72,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "14",
                    "correlation_time": "1602644815",
                    "question_id": "284708",
                    "difficulty_id": "3",
                    "question_title": "<p>软件架构需求是指用户对目标软件系统在功能、行为、性能和设计约束等方面的期望。以下活动中，不属于软件架构需求过程中标识构件范畴的是_____。</p>",
                    "option": [
                        " 生成类图 ",
                        " 对类图进行分组 ",
                        " 对类图进行测试 ",
                        " 将类合并打包 "
                    ],
                    "answer": [
                        "C"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>软件架构需求过程主要是获取用户需求，标识系统中所要用到的构件，并进行架构需求评审。其中，标识构件又详细地分为生成类图、对类图进行分组和将类打包成构件3个步骤。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284708",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602644815",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "系统架构与集成技术"
                    ],
                    "single_score": 0,
                    "index": 73,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "15",
                    "correlation_time": "1602644853",
                    "question_id": "284709",
                    "difficulty_id": "3",
                    "question_title": "<p>敏捷软件过程强调：让客户满意和软件尽早增量发布；小而高度自主的项目团队；非正式的方法；最小化软件工程工作产品及整体精简开发。_____不是采用这种软件开发过程的原因。</p>",
                    "option": [
                        " 难以提前预测哪些需求是稳定的和哪些需求会变化 ",
                        " 对于软件项目开发来说，设计和实现可以做到基本分离 ",
                        " 从制定计划的角度来看，分析、设计、实现和测试并不容易预测 ",
                        " 可执行原型和部分实现的可运行系统是了解用户需求和反馈的有效媒介 "
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>敏捷开发是一种以人为核心、迭代、循序渐进的开发方法。在敏捷开发中，软件项目的构建被切分成多个子项目，各个子项目成果都经过测试，具备集成和可运行的特征。通过任何一个敏捷过程都可以由其所强调的3个关键假设而识别出来，即：①难以提前预测哪些需求是稳定的和哪些需求会变化，同样，预测项目进行中客户优先级的变化也是困难的；②对于软件项目开发来说，设计和实现是交错进行的；③从制定计划的角度来看，分析、设计、实现和测试并不容易预测。</p><p>如何建立能解决不可预测性的过程?这就要求敏捷过程必须具有自适应性。但原地踏步式的连续适应性变化收效甚微。因而，敏捷软件过程还必须增量地适应。为了达到这一目的，敏捷团队需要客户的反馈以做出正确的适应性改变。可执行原型和部分实现的可运行系统是了解用户需求和反馈的有效媒介。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284709",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602644853",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "软件开发与管理"
                    ],
                    "single_score": 0,
                    "index": 74,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "radio",
                    "show_son": 0
                },
                {
                    "every_score": "1",
                    "rank": "16",
                    "correlation_time": "1602645132",
                    "question_id": "284723",
                    "difficulty_id": "3",
                    "question_title": "<p>山区某乡的6个村之间有山路如图所示，其中的数字标明了各条山路的长度（千米）。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602645104515729.jpg\" title=\"1602645104515729.jpg\" alt=\"1.jpg\"/></p><p>乡政府决定沿山路架设电话线。为实现村村通电话，电话线总长至少为（）千米。</p>",
                    "option": [
                        "11",
                        "14",
                        "18",
                        "33"
                    ],
                    "answer": [
                        "B"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "<p>该题考查最小生成树相关知识。解题时，可以采用克鲁斯卡尔算法，从图中，按边权值从小到大顺序来选择边，当选取的边会形成环路时，放弃该边的选择。选足n-1条边时(n为图中的节点数)，即为解。依据该原则，得到图，加粗线组成最小生成树。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602645131507750.jpg\" title=\"1602645131507750.jpg\" alt=\"1.jpg\"/></p><p>所以电话线总长为：1+2+3+4+4=14。</p>",
                    "question_type": "1",
                    "material_text": "",
                    "answer_type": "1",
                    "score_rule": "",
                    "new_parent_id": "284723",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1602645132",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "单选题",
                    "examine_id": "10609",
                    "type": "3",
                    "title": "2020系统架构设计师拟真试卷上午（限时解析）",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "45",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "30",
                    "max_score": "75",
                    "exam_num": "875",
                    "person_num": "0",
                    "avg_time": "38.5",
                    "is_right": "0",
                    "chapter_name": [
                        "应用数学\t"
                    ],
                    "single_score": 0,
                    "index": 75,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [
                        "D"
                    ],
                    "answer_imgs": [],
                    "result": 2,
                    "other_type_name": "radio",
                    "show_son": 0
                }
            ],
            "summary": {
                "radio": {
                    "total_question": 75,
                    "total_score": 75,
                    "question_types": [
                        1,
                        9,
                        11
                    ]
                },
                "multiple": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        2,
                        12
                    ]
                },
                "budingxiang": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        7
                    ]
                },
                "judge": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        3,
                        13
                    ]
                },
                "cloze": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        8
                    ]
                },
                "fill": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        4
                    ]
                },
                "qanda": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        5,
                        14
                    ]
                },
                "program": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        6
                    ]
                },
                "material": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        10
                    ]
                }
            }
        },
        "pagination": {
            "curPage": 1,
            "pageSize": 250,
            "total": 75,
            "hasNextPage": false
        },
        "totalOrder": [
            {
                "index": 1,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 2
            },
            {
                "index": 2,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 3,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 4,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 5,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 6,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 7,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 8,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 9,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 10,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 11,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 12,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 13,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 14,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 15,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 16,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 17,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 18,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 19,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 20,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 21,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 22,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 23,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 24,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 25,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 26,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 27,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 28,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 29,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 30,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 31,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 32,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 33,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 34,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 35,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 36,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 37,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 38,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 39,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 40,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 41,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 42,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 43,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 44,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 45,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 46,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 47,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 48,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 49,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 50,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 51,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 52,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 53,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 54,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 55,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 56,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 57,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 58,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 59,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 60,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 61,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 62,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 63,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 64,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 65,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 66,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 67,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 68,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 69,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 70,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 71,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 72,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 73,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 74,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 75,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 2
            }
        ]
    }
}
