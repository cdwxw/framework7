{
    "msg": "成功",
    "status": 0,
    "data": {
        "data": {
            "examine": {
                "examine_id": 12080,
                "answer_id": "3940055",
                "title": "2019年11月 系统架构设计师 论文",
                "len_time": 0,
                "total_score": "100",
                "get_score": "0",
                "total_question": 4,
                "proposal": "",
                "proposalList": [
                    {
                        "proposal": "",
                        "comment_time": "0",
                        "log_id": "8588695"
                    }
                ],
                "platform_id": "2",
                "submit_limit_num": "0",
                "version_id": "0",
                "version_year": "0",
                "mark_question_ids": []
            },
            "question": [
                {
                    "every_score": "25",
                    "rank": "1",
                    "correlation_time": "1626524208",
                    "question_id": "303759",
                    "difficulty_id": "3",
                    "question_title": "<p>试题一 &nbsp;论软件设计方法及其应用</p><p>软件设计（Software Design，SD)根据软件需求规格说明书设计软件系统的整体结构、划分功能模块、确定每个模块的实现算法以及程序流程等，形成软件的具体设计方案。软件设计把许多事物和问题按不同的层次和角度进行抽象，将问题或事物进行模块化分解，以便更容易解决问题。分解得越细，模块数量也就越多，设计者需要考虑模块之间的耦合度。</p><p>&nbsp;</p><p>请围绕“论软件设计方法及其应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细阐述有哪些不同的软件设计方法，并说明每种方法的适用场景。</p><p>3.详细说明你所参与的软件开发项目中，使用了哪种软件设计方法，具体实施效果如何。</p>",
                    "option": "",
                    "answer": [
                        "<p>1．简要描述所参与设计的软件系统，并明确指出在系统设计过程种承担的主要工作。</p><p>2．分析系统设计的主要方法，并详细阐述每种设计方法。</p><p>1) 净室方法</p><p>净室软件工程(净室方法)是软件开发的一种形式化方法,它可以生成高质量的软件。它使用盒结构规约进行分析和设计建模,并且强调将正确性验证(而不是测试)作为发现和消除错误的主要机制,使用统计的测试来获取认证被交付的软件的可靠性所必需的出错率信息。</p><p>净室方法从使用盒结构表示的分析和设计模型入手,一个“盒”在某特定的抽象层次上封装系统(或系统的某些方面)。通过逐步求精的过程,盒被精化为层次,其中每个盒具有引用透明性:每个盒规约的信息内容对定义其精华是足够的,不需要信赖于任何其他盒的实现。这使得分析人员能够层次地划分一个系统,从在顶层的本质表示转移向在底层的实现特定的细节。净室方法主要使用三种盒类型：黑盒、状态盒和清晰盒。</p><p>净室方法是一种严格的软件工程方法,它是一种强调正确性的数学验证和软件可靠性认证的软件过程模型,其目标和结果是非常低的出错率,这是使用非形式化方法难于或不可能达到的。</p><p>2)&nbsp;结构化设计</p><p>结构化方法由结构化分析、结构化设计、结构化程序设计构成，它是一种面向数据流的开发方法。结构化分析是根据分解与抽象的原则，按照系统中数据处理的流程，用数据流图来建立系统的功能模型，从而完成需求分析工作。</p><p>①&nbsp;结构化设计原则</p><p>②&nbsp;结构化设计步骤</p><p>③ 结构化缺点</p><p>在结构化设计中，模块和模块之间的关系局限于信息流，限制了对模块之间众多关系的表达，也无法体现模块和模块之间其他的众多关系，包含各种各样的结构、行为、依赖、包含（在结构化设计中这种关系隐含在分层中）、继承、关联关系等等。结构化设计仅解决了模块在封装和信息隐藏方面的问题。</p><p>④ 结构化设计适合场景</p><p>3) 面向对象设计</p><p>面向对象的设计模型包含以包图表示的软件体系结构图、以交互图表示的用例实现图、完整精确的类图、针对复杂对象的状态图和用以描述流程化处理过程的活动图等。</p><p>①&nbsp;UML与4+1视图</p><p>②&nbsp;设计原则</p><p>③ 设计模式</p><p>④ 面向对象设计适合场景</p><p>4) 原型法</p><p>结构化方法和面向对象方法有一个共同点：在系统开发初期必须明确系统的功能要求，确定系统边界。从工程学角度来看，这是十分自然的：解决问题之前必须明确要解决的问题是什么，然而对于信息系统建设而言，明确问题本身不是一件轻松的事情。</p><p>①&nbsp;原型分类</p><p>水平原型和垂直原型，抛弃原型、演进原型和递增原型</p><p>②&nbsp;原型类型的选择</p><p>③ 原型法适合场景</p><p>3．结合项目实践。针对实际参与的软件设计过程，说明所采用的设计方法，并描述其具体实施过程和效果。</p>"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "无",
                    "question_type": "5",
                    "material_text": "",
                    "answer_type": "5",
                    "score_rule": "",
                    "new_parent_id": "303759",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1626524208",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "问答题",
                    "examine_id": "12080",
                    "type": "3",
                    "title": "2019年11月 系统架构设计师 论文",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "60",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "22",
                    "person_num": "41",
                    "avg_time": "5.1",
                    "is_right": "0",
                    "chapter_name": [
                        "论文"
                    ],
                    "single_score": 0,
                    "index": 1,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "qanda",
                    "show_son": 0
                },
                {
                    "every_score": "25",
                    "rank": "1",
                    "correlation_time": "1626524232",
                    "question_id": "303760",
                    "difficulty_id": "3",
                    "question_title": "<p>试题二 &nbsp;论软件系统架构评估及其应用</p><p>对于软件系统，尤其是大规模复杂软件系统而言，软件系统架构对于确保最终系统的质量具有十分重要的意义。在系统架构设计结束后，为保证架构设计的合理性、完整性和针对性，保证系统质量，降低成本及投资风险，需要对设计好的系统架构进行评估。架构评估是软件开发过程中的重要环节。</p><p>&nbsp;</p><p>请围绕“软件系统架构评估及其应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细阐述有哪些不同的软件系统架构评估方法，并从评估目标、质量属性和评估活动等方面论述其区别。</p><p>3.详细说明你所参与的软件开发项目中，使用了哪种评估方法，具体实施过程和效果如何。</p>",
                    "option": "",
                    "answer": [
                        "<p>1.&nbsp;简要描述所参与架构评估的软件系统，并明确指出在评估过程中承担的主要工作。</p><p>2.&nbsp;分析软件系统架构评估中所普遍关注的质量属性，并详细阐述每种质量属性的具体含义。</p><p>系统架构评估中普遍关注的质量属性包括：</p><p>1)&nbsp;性能</p><p>性能是指系统的响应能力，即需要多长时间才能对某个事件做出响应，或者在某段事件内系统所能处理的事件个数。经常用单位事件内所处理事务的数量或系统完成某个事务处理所需的时间来对性能进行定量表示。</p><p>2)&nbsp;可靠性</p><p>可靠性是软件系统在应用或者系统错误面前，在意外或者错误使用的情况下维持软件系统的功能特性的基本能力。</p><p>3)&nbsp;可用性</p><p>可用性是系统能够正常运行的时间比例。经常用两次故障之间的时间长度或在出现故障时系统能够恢复正常的速度来表示。</p><p>4)&nbsp;安全性</p><p>安全性是指系统在向合法用户提供服务的同时能够阻止非授权用户使用的企图或拒绝服务的能力。</p><p>5)&nbsp;可修改性</p><p>可修改性是指能够快速地以较高的性能价格比对系统进行变更的能力，包括可维护性、可扩展性、结构重构、可移植性。</p><p>6)&nbsp;功能性</p><p>功能性是系统所能完成所期望的工作的能力。一项任务的完成需要系统中许多或大多数构件的相互协作。</p><p>7)&nbsp;可变性</p><p>可变性是指体系结构经扩充或变更而成为新体系结构的能力。</p><p>8)&nbsp;互操作性</p><p>互操作性是指作为系统组成部分的软件不是独立存在的，经常与其他系统或自身环境相互作用。如程序和用其他编程语言编写的软件系统的交互作用就是互操作性的问题。</p><p>3.&nbsp;分析软件系统架构评估种现阶段主要评估方法</p><p>业界已开发出多种软件架构评估的方法,按基于的技术手段来看,可以分为三类:基于调查问卷或检查表的方式、基于场景的方式和基于度量的方式。</p><p>1)&nbsp;基于调查问卷或检查表的方式:该方式的关键是要设计好问卷或检查表,它充分利用系统相关人员的经验和知识,获得对架构的评估。其缺点是在很大程度上依赖于评估人员的主观推断。</p><p>2） 基于场景的方式:基于场景的方式由SEI首先提出并应用在架构权衡分析法(Architecture Tradeoff Analysis Method, ATAM)和软件架构分析方法(Software&nbsp;Architecture Analysis Method, SAAM)中。它是通过分析软件架构对场景(也就是对系统的使用或修改活动)的支持程度,从而判断该架构对这一场景所代表的质量需求的满足程度。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;(1)架构权衡分析方法ATAM是一种系统架构评估方法,主要在系统开发之前,针对性能、可用性、安全性和可修改性等质量属性进行评价和折中。ATAM可以分为4个主要的活动阶段,包括需求收集、架构视图描述、属性模型构造和分析、架构决策与折中,整个评估过程强调以属性作为架构评估的核心概念。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;(2) SAAM是最早形成文档并得到广泛应用的软件架构分析方法。SAAM的主要输入是问题描述、需求说明和架构描述,其分析过程主要包括场景开发、架构描述、单个场景评估、场景交互和总体评估。</p><p>3) 基于度量的方式:制定一些定量值来度量架构,如代码行数等。要制定质量属性和度量结果之间的映射。</p><p>4. 针对实际参与的软件系统架构评估，说明所采用的评估方法，并描述其具体实施过程和效果。</p>"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "无",
                    "question_type": "5",
                    "material_text": "",
                    "answer_type": "5",
                    "score_rule": "",
                    "new_parent_id": "303760",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1626524232",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "问答题",
                    "examine_id": "12080",
                    "type": "3",
                    "title": "2019年11月 系统架构设计师 论文",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "60",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "22",
                    "person_num": "41",
                    "avg_time": "5.1",
                    "is_right": "0",
                    "chapter_name": [
                        "论文"
                    ],
                    "single_score": 0,
                    "index": 2,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "qanda",
                    "show_son": 0
                },
                {
                    "every_score": "25",
                    "rank": "1",
                    "correlation_time": "1626524255",
                    "question_id": "303761",
                    "difficulty_id": "3",
                    "question_title": "<p>试题三 &nbsp;论数据湖技术及其应用</p><p>近年来，随着移动互联网、物联网、工业互联网等技术的不断发展，企业级应用面临的数据规模不断增大，数据类型异常复杂。针对这一问题，业界提出“数据湖（Data Lake)”这一新型的企业数据管理技术。数据湖是一个存储企业各种原始数据的大型仓库，支持对任意规模的结构化、半结构化和非结构化数据进行集中式存储，数据按照原有结构进行存储，无须进行结构化处理；数据湖中的数据可供存取、处理、分析及传输，支撑大数据处理、实时分析、机器学习、数据可视化等多种应用，最终支持企业的智能决策过程。</p><p>&nbsp;</p><p>请围绕“数据湖技术及其应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细阐述数据湖技术，并从主要数据来源、数据模式（Schema）转换时机、数据存储成本、数据质量、面对用户和主要支撑应用类型等5个方面详细论述数据湖技术与数据仓库技术的差异。</p><p>3.详细说明你所参与的软件开发项目中，如何采用数据湖技术进行企业数据管理，并说明具体实施过程及应用效果。</p>",
                    "option": "",
                    "answer": [
                        "<p>【试题三：论数据湖技术及其应用】写作要点</p><p>1．简要叙述所参与的大数据或数据湖系统项目，并明确指出在其中承担的职务和主要工作。</p><p>2．分析并阐述数据湖技术：</p><p>1)&nbsp;大数据的由来和表现。</p><p>2) 大数据5V特性</p><p>3) 大数据与数据仓库</p><p>4) 数据仓库的4个特性</p><p>3. 分析并阐述数据湖技术：</p><p>1) 数据仓库的缺点</p><p>2) 数据湖的技术特点</p><p>3) 数据湖的概念</p><p>4) 数据库的特性</p><p>4. 分析并对比数据湖(Data Lake, DL)与数据仓库(Data Warehouse, DW)</p><p>1) 数据来源</p><p>DW：从外部数据源获取</p><p>DL：既可从外部数据源获取，也可从外部应用或外部存储获取</p><p>1)&nbsp;数据模式（Schema）转换时机</p><p>DW：采用ETL</p><p>DL：既支持ETL，也支持ELT</p><p>2)&nbsp;数据存储成本</p><p>DW：通常采用ODS-DWD-DW-DM-ST五层架构，存储成本高</p><p>DL：通常采用原始数据和流计算，存储成本低</p><p>3)&nbsp;数据质量</p><p>DW：依赖数据治理规范，ELT过程损失数据准确度和精度，质量较低</p><p>DL：存储原始数据，不损失数据准确度和精度，质量高</p><p>5)&nbsp;面对用户和主要支撑应用类型</p><p>DW：联机分析(OLAP)和决策支持(DSS)</p><p>DL：物联网、人工智能和以智能制造、智慧城市等为代表的智能赋能应用</p><p>5．结合自身参与项目的实际状况，阐述数据湖技术在实际项目中的实施过程和应用效果。</p>"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "无",
                    "question_type": "5",
                    "material_text": "",
                    "answer_type": "5",
                    "score_rule": "",
                    "new_parent_id": "303761",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1626524255",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "问答题",
                    "examine_id": "12080",
                    "type": "3",
                    "title": "2019年11月 系统架构设计师 论文",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "60",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "22",
                    "person_num": "41",
                    "avg_time": "5.1",
                    "is_right": "0",
                    "chapter_name": [
                        "论文"
                    ],
                    "single_score": 0,
                    "index": 3,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "qanda",
                    "show_son": 0
                },
                {
                    "every_score": "25",
                    "rank": "1",
                    "correlation_time": "1626524293",
                    "question_id": "303762",
                    "difficulty_id": "3",
                    "question_title": "<p>试题四 &nbsp;论负载均衡技术在Web系统中的应用</p><p>负载均衡技术是提升Web系统性能的重要方法。利用负载均衡技术， 可将负载(工作任务) 进行平衡、分摊到多个操作单元上执行， 从而协同完成工作任务， 达到提升Web系统性能的目的。</p><p>&nbsp;</p><p>请围绕“负载均衡技术在Web系统中的应用”论题， 依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细阐述常见的三种负载均衡算法，说明算法的基本原理。</p><p>3.详细说明你所参与的软件开发项目中， 如何基于负载均衡算法实现Web应用系统的负载均衡。</p>",
                    "option": "",
                    "answer": [
                        "<p>1．简要叙述所参与管理和开发的Web系统项目，并明确指出在其中承担的主要任务和开展的主要工作。</p><p>2．分析并描述负载均衡在Web应用项目高并发、高性能、高可用三高架构中的意义和作用</p><p>3. 选择三种常见的通用负载均衡算法，详细阐述负载均衡中的算法和每种算法的基本原理</p><p>1) 轮询算法</p><p>2) 随机算法</p><p>3) 比率算法</p><p>4) 优先级算法</p><p>5) 最少连接数算法</p><p>6) 最快响应时间算法</p><p>4．结合实际项目，详细阐述实际参与项目中采用了哪个或哪几个负载均衡算法实现，说明如何在项目中实践应用的负载均衡，并阐述负载均衡技术在项目中的应用效果。</p>"
                    ],
                    "knowledge": "系统架构设计师",
                    "analyze": "无",
                    "question_type": "5",
                    "material_text": "",
                    "answer_type": "5",
                    "score_rule": "",
                    "new_parent_id": "303762",
                    "sort_son": "0",
                    "creater_name": "试题账号",
                    "create_time": "1626524293",
                    "review_status": "1",
                    "parent_id": "0",
                    "first_id": "554",
                    "second_id": "227",
                    "three_id": "240",
                    "show_type_name": "问答题",
                    "examine_id": "12080",
                    "type": "3",
                    "title": "2019年11月 系统架构设计师 论文",
                    "len_time": "0",
                    "submit_limit_num": "0",
                    "platform_id": "2",
                    "radio_score": "0",
                    "pass_type": "2",
                    "pass_score": "60",
                    "passrate": "60",
                    "checkbox_score": "0",
                    "judgment_score": "0",
                    "avg_score": "0",
                    "max_score": "0",
                    "exam_num": "22",
                    "person_num": "41",
                    "avg_time": "5.1",
                    "is_right": "0",
                    "chapter_name": [
                        "论文"
                    ],
                    "single_score": 0,
                    "index": 4,
                    "belong_page": 1,
                    "like": 0,
                    "user_answer": [],
                    "answer_imgs": [],
                    "result": 0,
                    "other_type_name": "qanda",
                    "show_son": 0
                }
            ],
            "summary": {
                "radio": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        1,
                        9,
                        11
                    ]
                },
                "multiple": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        2,
                        12
                    ]
                },
                "budingxiang": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        7
                    ]
                },
                "judge": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        3,
                        13
                    ]
                },
                "cloze": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        8
                    ]
                },
                "fill": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        4
                    ]
                },
                "qanda": {
                    "total_question": 4,
                    "total_score": 100,
                    "question_types": [
                        5,
                        14
                    ]
                },
                "program": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        6
                    ]
                },
                "material": {
                    "total_question": 0,
                    "total_score": 0,
                    "question_types": [
                        10
                    ]
                }
            }
        },
        "pagination": {
            "curPage": 1,
            "pageSize": 250,
            "total": 4,
            "hasNextPage": false
        },
        "totalOrder": [
            {
                "index": 1,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 2,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 3,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            },
            {
                "index": 4,
                "belong_page": 1,
                "is_right": "0",
                "user_answer": [],
                "result": 0
            }
        ]
    }
}
